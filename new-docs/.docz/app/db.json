{
  "config": {
    "title": "react-phaser-fiber",
    "description": "Example of how to integrate docz with gatsby as a theme",
    "menu": ["Home", "Components"],
    "version": "0.1.0",
    "repository": "https://github.com/mattjennings/react-phaser-fiber",
    "native": false,
    "themeConfig": {},
    "separator": "-",
    "typescript": true,
    "docgenConfig": {
      "searchPath": "../packages/react-phaser-fiber/src"
    }
  },
  "entries": [
    {
      "key": "README.md",
      "value": {
        "id": "04c6e90faac2675aa89e2176d2eec7d8",
        "filepath": "README.md",
        "fullpath": "/Users/mattjennings/dev/react-phaser-fiber/new-docs/README.md",
        "link": "https://github.com/mattjennings/react-phaser-fiber/edit/master/new-docs/README.md",
        "hidden": false,
        "slug": "readme",
        "route": "/readme",
        "name": "Readme",
        "menu": "",
        "headings": [
          {
            "slug": "docz-gatsby-example",
            "depth": 1,
            "value": "Docz Gatsby Example"
          },
          {
            "slug": "using-create-docz-app",
            "depth": 2,
            "value": "Using  create-docz-app"
          },
          {
            "slug": "download",
            "depth": 2,
            "value": "Download"
          },
          {
            "slug": "setup",
            "depth": 2,
            "value": "Setup"
          },
          {
            "slug": "start-developing",
            "depth": 2,
            "value": "Start developing"
          },
          {
            "slug": "build",
            "depth": 2,
            "value": "Build"
          },
          {
            "slug": "serve-built-app",
            "depth": 2,
            "value": "Serve built app"
          }
        ]
      }
    },
    {
      "key": "src/components/Alert.mdx",
      "value": {
        "name": "Alert",
        "menu": "Components",
        "id": "411d2842c3d65e6ee7d3ec119ed4c5a0",
        "filepath": "src/components/Alert.mdx",
        "fullpath": "/Users/mattjennings/dev/react-phaser-fiber/new-docs/src/components/Alert.mdx",
        "link": "https://github.com/mattjennings/react-phaser-fiber/edit/master/new-docs/src/components/Alert.mdx",
        "hidden": false,
        "slug": "src-components-alert",
        "route": "/src-components-alert",
        "headings": [
          {
            "slug": "alert",
            "depth": 1,
            "value": "Alert"
          },
          {
            "slug": "properties",
            "depth": 2,
            "value": "Properties"
          },
          {
            "slug": "basic-usage",
            "depth": 2,
            "value": "Basic usage"
          },
          {
            "slug": "using-different-kinds",
            "depth": 2,
            "value": "Using different kinds"
          }
        ]
      }
    },
    {
      "key": "src/components/Button.mdx",
      "value": {
        "name": "Button",
        "menu": "Components",
        "id": "94c04b4e4bd29ffbdeec8755c1a4c04f",
        "filepath": "src/components/Button.mdx",
        "fullpath": "/Users/mattjennings/dev/react-phaser-fiber/new-docs/src/components/Button.mdx",
        "link": "https://github.com/mattjennings/react-phaser-fiber/edit/master/new-docs/src/components/Button.mdx",
        "hidden": false,
        "slug": "src-components-button",
        "route": "/src-components-button",
        "headings": [
          {
            "slug": "button",
            "depth": 1,
            "value": "Button"
          },
          {
            "slug": "best-practices",
            "depth": 3,
            "value": "Best practices"
          },
          {
            "slug": "properties",
            "depth": 2,
            "value": "Properties"
          },
          {
            "slug": "basic-usage",
            "depth": 2,
            "value": "Basic usage"
          },
          {
            "slug": "with-different-sizes",
            "depth": 2,
            "value": "With different sizes"
          },
          {
            "slug": "with-different-colors",
            "depth": 2,
            "value": "With different colors"
          },
          {
            "slug": "outlined",
            "depth": 2,
            "value": "Outlined"
          }
        ]
      }
    },
    {
      "key": "src/pages/Game.mdx",
      "value": {
        "name": "Game",
        "menu": "Components",
        "id": "65c89eff68fa9116f86168ccf36ff1dd",
        "filepath": "src/pages/Game.mdx",
        "fullpath": "/Users/mattjennings/dev/react-phaser-fiber/new-docs/src/pages/Game.mdx",
        "link": "https://github.com/mattjennings/react-phaser-fiber/edit/master/new-docs/src/pages/Game.mdx",
        "hidden": false,
        "slug": "src-pages-game",
        "route": "/src-pages-game",
        "headings": [
          {
            "slug": "basic-usage",
            "depth": 2,
            "value": "Basic usage"
          },
          {
            "slug": "properties",
            "depth": 2,
            "value": "Properties"
          }
        ]
      }
    },
    {
      "key": "src/pages/index.mdx",
      "value": {
        "name": "Home",
        "route": "/",
        "id": "522b7407e210088f3588b943aec44115",
        "filepath": "src/pages/index.mdx",
        "fullpath": "/Users/mattjennings/dev/react-phaser-fiber/new-docs/src/pages/index.mdx",
        "link": "https://github.com/mattjennings/react-phaser-fiber/edit/master/new-docs/src/pages/index.mdx",
        "hidden": false,
        "slug": "src-pages-index",
        "menu": "",
        "headings": [
          {
            "slug": "home",
            "depth": 1,
            "value": "Home"
          },
          {
            "slug": "consistency",
            "depth": 2,
            "value": "Consistency"
          }
        ]
      }
    }
  ],
  "props": [
    {
      "key": "../packages/react-phaser-fiber/src/components/ArcadeCollider.tsx",
      "value": [
        {
          "description": "Creates a collider between the parent GameObject component and the \"with\" prop. The\n\"with\" prop can either be a GameObject, a ref to a GameObject, or a string matching\nthe name of a GameObject (in Phaser).\n\n```\n  <ArcadeImage {...props}>\n    <ArcadeCollider with=\"coin\">\n  </ArcadeImage>\n```\n\nYou can also use it with a custom GameObject component\n\n```\n  <GameObject instance={instance}>\n    <ArcadeCollider with=\"coin\">\n  </GameObject>\n```",
          "displayName": "ArcadeCollider",
          "methods": [],
          "props": {
            "with": {
              "defaultValue": null,
              "description": "",
              "name": "with",
              "required": true,
              "type": {
                "name": "With | With[]"
              }
            },
            "overlapOnly": {
              "defaultValue": null,
              "description": "",
              "name": "overlapOnly",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "onCollide": {
              "defaultValue": null,
              "description": "",
              "name": "onCollide",
              "required": false,
              "type": {
                "name": "((self: any, other: With extends string ? any : With) => any) | undefined"
              }
            },
            "onProcess": {
              "defaultValue": null,
              "description": "",
              "name": "onProcess",
              "required": false,
              "type": {
                "name": "((self: any, other: With extends string ? any : With) => any) | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "../packages/react-phaser-fiber/src/components/ArcadeGroup.tsx",
      "value": [
        {
          "description": "",
          "displayName": "ArcadeGroup",
          "methods": [],
          "props": {
            "instance": {
              "defaultValue": null,
              "description": "",
              "name": "instance",
              "required": false,
              "type": {
                "name": "Group | undefined"
              }
            },
            "depth": {
              "defaultValue": null,
              "description": "The depth of this Game Object within the Scene.\n\r\nThe depth is also known as the 'z-index' in some environments, and allows you to change the rendering order\r\nof Game Objects, without actually moving their position in the display list.\r\n\r\nThe depth starts from zero (the default value) and increases from that point. A Game Object with a higher depth\r\nvalue will always render in front of one with a lower value.\r\n\r\nSetting the depth will queue a depth sort event within the Scene.",
              "name": "depth",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originX": {
              "defaultValue": null,
              "description": "The horizontal origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the left of the Game Object.",
              "name": "originX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originY": {
              "defaultValue": null,
              "description": "The vertical origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the top of the Game Object.",
              "name": "originY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginX": {
              "defaultValue": null,
              "description": "The horizontal display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginY": {
              "defaultValue": null,
              "description": "The vertical display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "angle": {
              "defaultValue": null,
              "description": "The angle of this Game Object as expressed in degrees.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in radians, see the `rotation` property instead.",
              "name": "angle",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "rotation": {
              "defaultValue": null,
              "description": "The angle of this Game Object in radians.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in degrees, see the `angle` property instead.",
              "name": "rotation",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "x": {
              "defaultValue": null,
              "description": "The x position of this Game Object.",
              "name": "x",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "y": {
              "defaultValue": null,
              "description": "The y position of this Game Object.",
              "name": "y",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "z": {
              "defaultValue": null,
              "description": "The z position of this Game Object.\nNote: Do not use this value to set the z-index, instead see the `depth` property.",
              "name": "z",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "w": {
              "defaultValue": null,
              "description": "The w position of this Game Object.",
              "name": "w",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scale": {
              "defaultValue": null,
              "description": "",
              "name": "scale",
              "required": false,
              "type": {
                "name": "number | (Point & { point?: Point | undefined; }) | undefined"
              }
            },
            "active": {
              "defaultValue": null,
              "description": "",
              "name": "active",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "name": {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "runChildUpdate": {
              "defaultValue": null,
              "description": "",
              "name": "runChildUpdate",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "alpha": {
              "defaultValue": null,
              "description": "",
              "name": "alpha",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tint": {
              "defaultValue": null,
              "description": "",
              "name": "tint",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tintFill": {
              "defaultValue": null,
              "description": "",
              "name": "tintFill",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "velocity": {
              "defaultValue": null,
              "description": "",
              "name": "velocity",
              "required": false,
              "type": {
                "name": "number | Point | undefined"
              }
            },
            "velocityX": {
              "defaultValue": null,
              "description": "",
              "name": "velocityX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "velocityY": {
              "defaultValue": null,
              "description": "",
              "name": "velocityY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "maxVelocity": {
              "defaultValue": null,
              "description": "",
              "name": "maxVelocity",
              "required": false,
              "type": {
                "name": "number | Point | undefined"
              }
            },
            "ref": {
              "defaultValue": null,
              "description": "",
              "name": "ref",
              "required": false,
              "type": {
                "name": "((instance: Group | null) => void) | RefObject<Group> | null | undefined"
              }
            },
            "key": {
              "defaultValue": null,
              "description": "",
              "name": "key",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "../packages/react-phaser-fiber/src/components/ArcadeImage.tsx",
      "value": [
        {
          "description": "",
          "displayName": "ArcadeImage",
          "methods": [],
          "props": {
            "instance": {
              "defaultValue": null,
              "description": "",
              "name": "instance",
              "required": false,
              "type": {
                "name": "Image | undefined"
              }
            },
            "depth": {
              "defaultValue": null,
              "description": "The depth of this Game Object within the Scene.\n\r\nThe depth is also known as the 'z-index' in some environments, and allows you to change the rendering order\r\nof Game Objects, without actually moving their position in the display list.\r\n\r\nThe depth starts from zero (the default value) and increases from that point. A Game Object with a higher depth\r\nvalue will always render in front of one with a lower value.\r\n\r\nSetting the depth will queue a depth sort event within the Scene.",
              "name": "depth",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originX": {
              "defaultValue": null,
              "description": "The horizontal origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the left of the Game Object.",
              "name": "originX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originY": {
              "defaultValue": null,
              "description": "The vertical origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the top of the Game Object.",
              "name": "originY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginX": {
              "defaultValue": null,
              "description": "The horizontal display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginY": {
              "defaultValue": null,
              "description": "The vertical display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "angle": {
              "defaultValue": null,
              "description": "The angle of this Game Object as expressed in degrees.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in radians, see the `rotation` property instead.",
              "name": "angle",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "rotation": {
              "defaultValue": null,
              "description": "The angle of this Game Object in radians.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in degrees, see the `angle` property instead.",
              "name": "rotation",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "x": {
              "defaultValue": null,
              "description": "The x position of this Game Object.",
              "name": "x",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "y": {
              "defaultValue": null,
              "description": "The y position of this Game Object.",
              "name": "y",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "z": {
              "defaultValue": null,
              "description": "The z position of this Game Object.\nNote: Do not use this value to set the z-index, instead see the `depth` property.",
              "name": "z",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "w": {
              "defaultValue": null,
              "description": "The w position of this Game Object.",
              "name": "w",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scale": {
              "defaultValue": null,
              "description": "",
              "name": "scale",
              "required": false,
              "type": {
                "name": "number | (Point & { point?: Point | undefined; }) | undefined"
              }
            },
            "active": {
              "defaultValue": null,
              "description": "",
              "name": "active",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "name": {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "alpha": {
              "defaultValue": null,
              "description": "",
              "name": "alpha",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tint": {
              "defaultValue": null,
              "description": "",
              "name": "tint",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tintFill": {
              "defaultValue": null,
              "description": "",
              "name": "tintFill",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "velocity": {
              "defaultValue": null,
              "description": "",
              "name": "velocity",
              "required": false,
              "type": {
                "name": "number | Point | undefined"
              }
            },
            "velocityX": {
              "defaultValue": null,
              "description": "",
              "name": "velocityX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "velocityY": {
              "defaultValue": null,
              "description": "",
              "name": "velocityY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "maxVelocity": {
              "defaultValue": null,
              "description": "",
              "name": "maxVelocity",
              "required": false,
              "type": {
                "name": "number | Point | undefined"
              }
            },
            "blendMode": {
              "defaultValue": null,
              "description": "Sets the Blend Mode being used by this Game Object.\n\r\nThis can be a const, such as `Phaser.BlendModes.SCREEN`, or an integer, such as 4 (for Overlay)\r\n\r\nUnder WebGL only the following Blend Modes are available:\r\n\r\n* ADD\r\n* MULTIPLY\r\n* SCREEN\r\n* ERASE\r\n\r\nCanvas has more available depending on browser support.\r\n\r\nYou can also create your own custom Blend Modes in WebGL.\r\n\r\nBlend modes have different effects under Canvas and WebGL, and from browser to browser, depending\r\non support. Blend Modes also cause a WebGL batch flush should it encounter a new blend mode. For these\r\nreasons try to be careful about the construction of your Scene and the frequency of which blend modes\r\nare used.",
              "name": "blendMode",
              "required": false,
              "type": {
                "name": "string | BlendModes | undefined"
              }
            },
            "flipX": {
              "defaultValue": null,
              "description": "The horizontally flipped state of the Game Object.\n\r\nA Game Object that is flipped horizontally will render inversed on the horizontal axis.\r\nFlipping always takes place from the middle of the texture and does not impact the scale value.\r\nIf this Game Object has a physics body, it will not change the body. This is a rendering toggle only.",
              "name": "flipX",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "flipY": {
              "defaultValue": null,
              "description": "The vertically flipped state of the Game Object.\n\r\nA Game Object that is flipped vertically will render inversed on the vertical axis (i.e. upside down)\r\nFlipping always takes place from the middle of the texture and does not impact the scale value.\r\nIf this Game Object has a physics body, it will not change the body. This is a rendering toggle only.",
              "name": "flipY",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "mask": {
              "defaultValue": null,
              "description": "The Mask this Game Object is using during render.",
              "name": "mask",
              "required": false,
              "type": {
                "name": "BitmapMask | GeometryMask | undefined"
              }
            },
            "displayHeight": {
              "defaultValue": null,
              "description": "The displayed height of this Game Object.\n\r\nThis value takes into account the scale factor.\r\n\r\nSetting this value will adjust the Game Object's scale property.",
              "name": "displayHeight",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayWidth": {
              "defaultValue": null,
              "description": "The displayed width of this Game Object.\n\r\nThis value takes into account the scale factor.\r\n\r\nSetting this value will adjust the Game Object's scale property.",
              "name": "displayWidth",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "height": {
              "defaultValue": null,
              "description": "The native (un-scaled) height of this Game Object.\n\r\nChanging this value will not change the size that the Game Object is rendered in-game.\r\nFor that you need to either set the scale of the Game Object (`setScale`) or use\r\nthe `displayHeight` property.",
              "name": "height",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "width": {
              "defaultValue": null,
              "description": "The native (un-scaled) width of this Game Object.\n\r\nChanging this value will not change the size that the Game Object is rendered in-game.\r\nFor that you need to either set the scale of the Game Object (`setScale`) or use\r\nthe `displayWidth` property.",
              "name": "width",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scrollFactorX": {
              "defaultValue": null,
              "description": "The horizontal scroll factor of this Game Object.\n\r\nThe scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n\r\nWhen a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\nIt does not change the Game Objects actual position values.\r\n\r\nA value of 1 means it will move exactly in sync with a camera.\r\nA value of 0 means it will not move at all, even if the camera moves.\r\nOther values control the degree to which the camera movement is mapped to this Game Object.\r\n\r\nPlease be aware that scroll factor values other than 1 are not taken in to consideration when\r\ncalculating physics collisions. Bodies always collide based on their world position, but changing\r\nthe scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\nthem from physics bodies if not accounted for in your code.",
              "name": "scrollFactorX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scrollFactorY": {
              "defaultValue": null,
              "description": "The vertical scroll factor of this Game Object.\n\r\nThe scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n\r\nWhen a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\nIt does not change the Game Objects actual position values.\r\n\r\nA value of 1 means it will move exactly in sync with a camera.\r\nA value of 0 means it will not move at all, even if the camera moves.\r\nOther values control the degree to which the camera movement is mapped to this Game Object.\r\n\r\nPlease be aware that scroll factor values other than 1 are not taken in to consideration when\r\ncalculating physics collisions. Bodies always collide based on their world position, but changing\r\nthe scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\nthem from physics bodies if not accounted for in your code.",
              "name": "scrollFactorY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "visible": {
              "defaultValue": null,
              "description": "The visible state of the Game Object.\n\r\nAn invisible Game Object will skip rendering, but will still process update logic.",
              "name": "visible",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "tabIndex": {
              "defaultValue": null,
              "description": "",
              "name": "tabIndex",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "data": {
              "defaultValue": null,
              "description": "",
              "name": "data",
              "required": false,
              "type": {
                "name": "any"
              }
            },
            "renderFlags": {
              "defaultValue": null,
              "description": "",
              "name": "renderFlags",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "cameraFilter": {
              "defaultValue": null,
              "description": "",
              "name": "cameraFilter",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "ignoreDestroy": {
              "defaultValue": null,
              "description": "",
              "name": "ignoreDestroy",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "interactive": {
              "defaultValue": null,
              "description": "",
              "name": "interactive",
              "required": false,
              "type": {
                "name": "{ shape: any; callback?: HitAreaCallback | undefined; dropZone?: boolean | undefined; } | undefined"
              }
            },
            "crop": {
              "defaultValue": null,
              "description": "",
              "name": "crop",
              "required": false,
              "type": {
                "name": "{ x?: number | undefined; y?: number | undefined; width?: number | undefined; height?: number | undefined; } | undefined"
              }
            },
            "isCropped": {
              "defaultValue": null,
              "description": "",
              "name": "isCropped",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "pipeline": {
              "defaultValue": null,
              "description": "",
              "name": "pipeline",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "setSizeToFrame": {
              "defaultValue": null,
              "description": "",
              "name": "setSizeToFrame",
              "required": false,
              "type": {
                "name": "Frame | undefined"
              }
            },
            "texture": {
              "defaultValue": null,
              "description": "",
              "name": "texture",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "frame": {
              "defaultValue": null,
              "description": "",
              "name": "frame",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "accelerationX": {
              "defaultValue": null,
              "description": "",
              "name": "accelerationX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "accelerationY": {
              "defaultValue": null,
              "description": "",
              "name": "accelerationY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "acceleration": {
              "defaultValue": null,
              "description": "",
              "name": "acceleration",
              "required": false,
              "type": {
                "name": "number | Point | undefined"
              }
            },
            "angularAcceleration": {
              "defaultValue": null,
              "description": "",
              "name": "angularAcceleration",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "angularDrag": {
              "defaultValue": null,
              "description": "",
              "name": "angularDrag",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "angularVelocity": {
              "defaultValue": null,
              "description": "",
              "name": "angularVelocity",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "allowDrag": {
              "defaultValue": null,
              "description": "",
              "name": "allowDrag",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "allowGravity": {
              "defaultValue": null,
              "description": "",
              "name": "allowGravity",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "allowRotation": {
              "defaultValue": null,
              "description": "",
              "name": "allowRotation",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "collideWorldBounds": {
              "defaultValue": null,
              "description": "",
              "name": "collideWorldBounds",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "onWorldBounds": {
              "defaultValue": null,
              "description": "",
              "name": "onWorldBounds",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "physicsType": {
              "defaultValue": null,
              "description": "Determines whether or not the Arcade Body is static or dynamic\n\n(this is only used on mount - it cannot be changed)",
              "name": "physicsType",
              "required": false,
              "type": {
                "name": "\"static\" | \"dynamic\" | undefined"
              }
            },
            "bounceX": {
              "defaultValue": null,
              "description": "",
              "name": "bounceX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "bounceY": {
              "defaultValue": null,
              "description": "",
              "name": "bounceY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "bounce": {
              "defaultValue": null,
              "description": "",
              "name": "bounce",
              "required": false,
              "type": {
                "name": "number | Point | undefined"
              }
            },
            "debug": {
              "defaultValue": null,
              "description": "",
              "name": "debug",
              "required": false,
              "type": {
                "name": "{ bodyColor?: number | undefined; showBody?: boolean | undefined; showVelocity?: boolean | undefined; } | undefined"
              }
            },
            "disableBody": {
              "defaultValue": null,
              "description": "Disables the Body",
              "name": "disableBody",
              "required": false,
              "type": {
                "name": "boolean | { disableGameObject?: boolean | undefined; hideGameObject?: boolean | undefined; } | undefined"
              }
            },
            "damping": {
              "defaultValue": null,
              "description": "",
              "name": "damping",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "dragX": {
              "defaultValue": null,
              "description": "",
              "name": "dragX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "dragY": {
              "defaultValue": null,
              "description": "",
              "name": "dragY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "drag": {
              "defaultValue": null,
              "description": "",
              "name": "drag",
              "required": false,
              "type": {
                "name": "number | Point | undefined"
              }
            },
            "frictionX": {
              "defaultValue": null,
              "description": "",
              "name": "frictionX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "frictionY": {
              "defaultValue": null,
              "description": "",
              "name": "frictionY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "friction": {
              "defaultValue": null,
              "description": "",
              "name": "friction",
              "required": false,
              "type": {
                "name": "number | Point | undefined"
              }
            },
            "gravityX": {
              "defaultValue": null,
              "description": "",
              "name": "gravityX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "gravityY": {
              "defaultValue": null,
              "description": "",
              "name": "gravityY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "gravity": {
              "defaultValue": null,
              "description": "",
              "name": "gravity",
              "required": false,
              "type": {
                "name": "number | Point | undefined"
              }
            },
            "immovable": {
              "defaultValue": null,
              "description": "",
              "name": "immovable",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "mass": {
              "defaultValue": null,
              "description": "",
              "name": "mass",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "circle": {
              "defaultValue": null,
              "description": "",
              "name": "circle",
              "required": false,
              "type": {
                "name": "{ radius: number; offsetX?: number | undefined; offsetY?: number | undefined; } | undefined"
              }
            },
            "offset": {
              "defaultValue": null,
              "description": "",
              "name": "offset",
              "required": false,
              "type": {
                "name": "Point | undefined"
              }
            },
            "size": {
              "defaultValue": null,
              "description": "",
              "name": "size",
              "required": false,
              "type": {
                "name": "{ width: number; height: number; center?: number | undefined; } | undefined"
              }
            },
            "ref": {
              "defaultValue": null,
              "description": "",
              "name": "ref",
              "required": false,
              "type": {
                "name": "((instance: Image | null) => void) | RefObject<Image> | null | undefined"
              }
            },
            "key": {
              "defaultValue": null,
              "description": "",
              "name": "key",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "../packages/react-phaser-fiber/src/components/ArcadeSprite.tsx",
      "value": [
        {
          "description": "",
          "displayName": "ArcadeSprite",
          "methods": [],
          "props": {
            "instance": {
              "defaultValue": null,
              "description": "",
              "name": "instance",
              "required": false,
              "type": {
                "name": "Sprite | undefined"
              }
            },
            "depth": {
              "defaultValue": null,
              "description": "The depth of this Game Object within the Scene.\n\r\nThe depth is also known as the 'z-index' in some environments, and allows you to change the rendering order\r\nof Game Objects, without actually moving their position in the display list.\r\n\r\nThe depth starts from zero (the default value) and increases from that point. A Game Object with a higher depth\r\nvalue will always render in front of one with a lower value.\r\n\r\nSetting the depth will queue a depth sort event within the Scene.",
              "name": "depth",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originX": {
              "defaultValue": null,
              "description": "The horizontal origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the left of the Game Object.",
              "name": "originX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originY": {
              "defaultValue": null,
              "description": "The vertical origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the top of the Game Object.",
              "name": "originY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginX": {
              "defaultValue": null,
              "description": "The horizontal display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginY": {
              "defaultValue": null,
              "description": "The vertical display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "angle": {
              "defaultValue": null,
              "description": "The angle of this Game Object as expressed in degrees.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in radians, see the `rotation` property instead.",
              "name": "angle",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "rotation": {
              "defaultValue": null,
              "description": "The angle of this Game Object in radians.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in degrees, see the `angle` property instead.",
              "name": "rotation",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "x": {
              "defaultValue": null,
              "description": "The x position of this Game Object.",
              "name": "x",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "y": {
              "defaultValue": null,
              "description": "The y position of this Game Object.",
              "name": "y",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "z": {
              "defaultValue": null,
              "description": "The z position of this Game Object.\nNote: Do not use this value to set the z-index, instead see the `depth` property.",
              "name": "z",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "w": {
              "defaultValue": null,
              "description": "The w position of this Game Object.",
              "name": "w",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scale": {
              "defaultValue": null,
              "description": "",
              "name": "scale",
              "required": false,
              "type": {
                "name": "number | (Point & { point?: Point | undefined; }) | undefined"
              }
            },
            "active": {
              "defaultValue": null,
              "description": "",
              "name": "active",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "name": {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "alpha": {
              "defaultValue": null,
              "description": "",
              "name": "alpha",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tint": {
              "defaultValue": null,
              "description": "",
              "name": "tint",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tintFill": {
              "defaultValue": null,
              "description": "",
              "name": "tintFill",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "velocity": {
              "defaultValue": null,
              "description": "",
              "name": "velocity",
              "required": false,
              "type": {
                "name": "number | Point | undefined"
              }
            },
            "velocityX": {
              "defaultValue": null,
              "description": "",
              "name": "velocityX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "velocityY": {
              "defaultValue": null,
              "description": "",
              "name": "velocityY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "maxVelocity": {
              "defaultValue": null,
              "description": "",
              "name": "maxVelocity",
              "required": false,
              "type": {
                "name": "number | Point | undefined"
              }
            },
            "blendMode": {
              "defaultValue": null,
              "description": "Sets the Blend Mode being used by this Game Object.\n\r\nThis can be a const, such as `Phaser.BlendModes.SCREEN`, or an integer, such as 4 (for Overlay)\r\n\r\nUnder WebGL only the following Blend Modes are available:\r\n\r\n* ADD\r\n* MULTIPLY\r\n* SCREEN\r\n* ERASE\r\n\r\nCanvas has more available depending on browser support.\r\n\r\nYou can also create your own custom Blend Modes in WebGL.\r\n\r\nBlend modes have different effects under Canvas and WebGL, and from browser to browser, depending\r\non support. Blend Modes also cause a WebGL batch flush should it encounter a new blend mode. For these\r\nreasons try to be careful about the construction of your Scene and the frequency of which blend modes\r\nare used.",
              "name": "blendMode",
              "required": false,
              "type": {
                "name": "string | BlendModes | undefined"
              }
            },
            "flipX": {
              "defaultValue": null,
              "description": "The horizontally flipped state of the Game Object.\n\r\nA Game Object that is flipped horizontally will render inversed on the horizontal axis.\r\nFlipping always takes place from the middle of the texture and does not impact the scale value.\r\nIf this Game Object has a physics body, it will not change the body. This is a rendering toggle only.",
              "name": "flipX",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "flipY": {
              "defaultValue": null,
              "description": "The vertically flipped state of the Game Object.\n\r\nA Game Object that is flipped vertically will render inversed on the vertical axis (i.e. upside down)\r\nFlipping always takes place from the middle of the texture and does not impact the scale value.\r\nIf this Game Object has a physics body, it will not change the body. This is a rendering toggle only.",
              "name": "flipY",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "mask": {
              "defaultValue": null,
              "description": "The Mask this Game Object is using during render.",
              "name": "mask",
              "required": false,
              "type": {
                "name": "BitmapMask | GeometryMask | undefined"
              }
            },
            "displayHeight": {
              "defaultValue": null,
              "description": "The displayed height of this Game Object.\n\r\nThis value takes into account the scale factor.\r\n\r\nSetting this value will adjust the Game Object's scale property.",
              "name": "displayHeight",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayWidth": {
              "defaultValue": null,
              "description": "The displayed width of this Game Object.\n\r\nThis value takes into account the scale factor.\r\n\r\nSetting this value will adjust the Game Object's scale property.",
              "name": "displayWidth",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "height": {
              "defaultValue": null,
              "description": "The native (un-scaled) height of this Game Object.\n\r\nChanging this value will not change the size that the Game Object is rendered in-game.\r\nFor that you need to either set the scale of the Game Object (`setScale`) or use\r\nthe `displayHeight` property.",
              "name": "height",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "width": {
              "defaultValue": null,
              "description": "The native (un-scaled) width of this Game Object.\n\r\nChanging this value will not change the size that the Game Object is rendered in-game.\r\nFor that you need to either set the scale of the Game Object (`setScale`) or use\r\nthe `displayWidth` property.",
              "name": "width",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scrollFactorX": {
              "defaultValue": null,
              "description": "The horizontal scroll factor of this Game Object.\n\r\nThe scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n\r\nWhen a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\nIt does not change the Game Objects actual position values.\r\n\r\nA value of 1 means it will move exactly in sync with a camera.\r\nA value of 0 means it will not move at all, even if the camera moves.\r\nOther values control the degree to which the camera movement is mapped to this Game Object.\r\n\r\nPlease be aware that scroll factor values other than 1 are not taken in to consideration when\r\ncalculating physics collisions. Bodies always collide based on their world position, but changing\r\nthe scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\nthem from physics bodies if not accounted for in your code.",
              "name": "scrollFactorX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scrollFactorY": {
              "defaultValue": null,
              "description": "The vertical scroll factor of this Game Object.\n\r\nThe scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n\r\nWhen a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\nIt does not change the Game Objects actual position values.\r\n\r\nA value of 1 means it will move exactly in sync with a camera.\r\nA value of 0 means it will not move at all, even if the camera moves.\r\nOther values control the degree to which the camera movement is mapped to this Game Object.\r\n\r\nPlease be aware that scroll factor values other than 1 are not taken in to consideration when\r\ncalculating physics collisions. Bodies always collide based on their world position, but changing\r\nthe scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\nthem from physics bodies if not accounted for in your code.",
              "name": "scrollFactorY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "visible": {
              "defaultValue": null,
              "description": "The visible state of the Game Object.\n\r\nAn invisible Game Object will skip rendering, but will still process update logic.",
              "name": "visible",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "tabIndex": {
              "defaultValue": null,
              "description": "",
              "name": "tabIndex",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "data": {
              "defaultValue": null,
              "description": "",
              "name": "data",
              "required": false,
              "type": {
                "name": "any"
              }
            },
            "renderFlags": {
              "defaultValue": null,
              "description": "",
              "name": "renderFlags",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "cameraFilter": {
              "defaultValue": null,
              "description": "",
              "name": "cameraFilter",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "ignoreDestroy": {
              "defaultValue": null,
              "description": "",
              "name": "ignoreDestroy",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "interactive": {
              "defaultValue": null,
              "description": "",
              "name": "interactive",
              "required": false,
              "type": {
                "name": "{ shape: any; callback?: HitAreaCallback | undefined; dropZone?: boolean | undefined; } | undefined"
              }
            },
            "crop": {
              "defaultValue": null,
              "description": "",
              "name": "crop",
              "required": false,
              "type": {
                "name": "{ x?: number | undefined; y?: number | undefined; width?: number | undefined; height?: number | undefined; } | undefined"
              }
            },
            "isCropped": {
              "defaultValue": null,
              "description": "",
              "name": "isCropped",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "pipeline": {
              "defaultValue": null,
              "description": "",
              "name": "pipeline",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "setSizeToFrame": {
              "defaultValue": null,
              "description": "",
              "name": "setSizeToFrame",
              "required": false,
              "type": {
                "name": "Frame | undefined"
              }
            },
            "texture": {
              "defaultValue": null,
              "description": "",
              "name": "texture",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "frame": {
              "defaultValue": null,
              "description": "",
              "name": "frame",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "accelerationX": {
              "defaultValue": null,
              "description": "",
              "name": "accelerationX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "accelerationY": {
              "defaultValue": null,
              "description": "",
              "name": "accelerationY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "acceleration": {
              "defaultValue": null,
              "description": "",
              "name": "acceleration",
              "required": false,
              "type": {
                "name": "number | Point | undefined"
              }
            },
            "angularAcceleration": {
              "defaultValue": null,
              "description": "",
              "name": "angularAcceleration",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "angularDrag": {
              "defaultValue": null,
              "description": "",
              "name": "angularDrag",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "angularVelocity": {
              "defaultValue": null,
              "description": "",
              "name": "angularVelocity",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "allowDrag": {
              "defaultValue": null,
              "description": "",
              "name": "allowDrag",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "allowGravity": {
              "defaultValue": null,
              "description": "",
              "name": "allowGravity",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "allowRotation": {
              "defaultValue": null,
              "description": "",
              "name": "allowRotation",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "collideWorldBounds": {
              "defaultValue": null,
              "description": "",
              "name": "collideWorldBounds",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "onWorldBounds": {
              "defaultValue": null,
              "description": "",
              "name": "onWorldBounds",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "physicsType": {
              "defaultValue": null,
              "description": "Determines whether or not the Arcade Body is static or dynamic\n\n(this is only used on mount - it cannot be changed)",
              "name": "physicsType",
              "required": false,
              "type": {
                "name": "\"static\" | \"dynamic\" | undefined"
              }
            },
            "bounceX": {
              "defaultValue": null,
              "description": "",
              "name": "bounceX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "bounceY": {
              "defaultValue": null,
              "description": "",
              "name": "bounceY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "bounce": {
              "defaultValue": null,
              "description": "",
              "name": "bounce",
              "required": false,
              "type": {
                "name": "number | Point | undefined"
              }
            },
            "debug": {
              "defaultValue": null,
              "description": "",
              "name": "debug",
              "required": false,
              "type": {
                "name": "{ bodyColor?: number | undefined; showBody?: boolean | undefined; showVelocity?: boolean | undefined; } | undefined"
              }
            },
            "disableBody": {
              "defaultValue": null,
              "description": "Disables the Body",
              "name": "disableBody",
              "required": false,
              "type": {
                "name": "boolean | { disableGameObject?: boolean | undefined; hideGameObject?: boolean | undefined; } | undefined"
              }
            },
            "damping": {
              "defaultValue": null,
              "description": "",
              "name": "damping",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "dragX": {
              "defaultValue": null,
              "description": "",
              "name": "dragX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "dragY": {
              "defaultValue": null,
              "description": "",
              "name": "dragY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "drag": {
              "defaultValue": null,
              "description": "",
              "name": "drag",
              "required": false,
              "type": {
                "name": "number | Point | undefined"
              }
            },
            "frictionX": {
              "defaultValue": null,
              "description": "",
              "name": "frictionX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "frictionY": {
              "defaultValue": null,
              "description": "",
              "name": "frictionY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "friction": {
              "defaultValue": null,
              "description": "",
              "name": "friction",
              "required": false,
              "type": {
                "name": "number | Point | undefined"
              }
            },
            "gravityX": {
              "defaultValue": null,
              "description": "",
              "name": "gravityX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "gravityY": {
              "defaultValue": null,
              "description": "",
              "name": "gravityY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "gravity": {
              "defaultValue": null,
              "description": "",
              "name": "gravity",
              "required": false,
              "type": {
                "name": "number | Point | undefined"
              }
            },
            "immovable": {
              "defaultValue": null,
              "description": "",
              "name": "immovable",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "mass": {
              "defaultValue": null,
              "description": "",
              "name": "mass",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "circle": {
              "defaultValue": null,
              "description": "",
              "name": "circle",
              "required": false,
              "type": {
                "name": "{ radius: number; offsetX?: number | undefined; offsetY?: number | undefined; } | undefined"
              }
            },
            "offset": {
              "defaultValue": null,
              "description": "",
              "name": "offset",
              "required": false,
              "type": {
                "name": "Point | undefined"
              }
            },
            "size": {
              "defaultValue": null,
              "description": "",
              "name": "size",
              "required": false,
              "type": {
                "name": "{ width: number; height: number; center?: number | undefined; } | undefined"
              }
            },
            "onAnimationComplete": {
              "defaultValue": null,
              "description": "",
              "name": "onAnimationComplete",
              "required": false,
              "type": {
                "name": "((animation: Animation, frame: AnimationFrame, instance: Sprite) => any) | undefined"
              }
            },
            "animation": {
              "defaultValue": null,
              "description": "Plays the animation by key",
              "name": "animation",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "accumulator": {
              "defaultValue": null,
              "description": "",
              "name": "accumulator",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "delay": {
              "defaultValue": null,
              "description": "",
              "name": "delay",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "duration": {
              "defaultValue": null,
              "description": "",
              "name": "duration",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "forward": {
              "defaultValue": null,
              "description": "",
              "name": "forward",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "frameRate": {
              "defaultValue": null,
              "description": "",
              "name": "frameRate",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "isPlaying": {
              "defaultValue": null,
              "description": "",
              "name": "isPlaying",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "msPerFrame": {
              "defaultValue": null,
              "description": "",
              "name": "msPerFrame",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "skipMissedFrames": {
              "defaultValue": null,
              "description": "",
              "name": "skipMissedFrames",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "repeat": {
              "defaultValue": null,
              "description": "",
              "name": "repeat",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "repeatDelay": {
              "defaultValue": null,
              "description": "",
              "name": "repeatDelay",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "timeScale": {
              "defaultValue": null,
              "description": "",
              "name": "timeScale",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "yoyo": {
              "defaultValue": null,
              "description": "",
              "name": "yoyo",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "progress": {
              "defaultValue": null,
              "description": "",
              "name": "progress",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "stopOnFrame": {
              "defaultValue": null,
              "description": "",
              "name": "stopOnFrame",
              "required": false,
              "type": {
                "name": "AnimationFrame | undefined"
              }
            },
            "stopAfterDelay": {
              "defaultValue": null,
              "description": "",
              "name": "stopAfterDelay",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "ref": {
              "defaultValue": null,
              "description": "",
              "name": "ref",
              "required": false,
              "type": {
                "name": "((instance: Sprite | null) => void) | RefObject<Sprite> | null | undefined"
              }
            },
            "key": {
              "defaultValue": null,
              "description": "",
              "name": "key",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "../packages/react-phaser-fiber/src/components/Group.tsx",
      "value": [
        {
          "description": "",
          "displayName": "Group",
          "methods": [],
          "props": {
            "depth": {
              "defaultValue": null,
              "description": "The depth of this Game Object within the Scene.\n\r\nThe depth is also known as the 'z-index' in some environments, and allows you to change the rendering order\r\nof Game Objects, without actually moving their position in the display list.\r\n\r\nThe depth starts from zero (the default value) and increases from that point. A Game Object with a higher depth\r\nvalue will always render in front of one with a lower value.\r\n\r\nSetting the depth will queue a depth sort event within the Scene.",
              "name": "depth",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originX": {
              "defaultValue": null,
              "description": "The horizontal origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the left of the Game Object.",
              "name": "originX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originY": {
              "defaultValue": null,
              "description": "The vertical origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the top of the Game Object.",
              "name": "originY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginX": {
              "defaultValue": null,
              "description": "The horizontal display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginY": {
              "defaultValue": null,
              "description": "The vertical display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "angle": {
              "defaultValue": null,
              "description": "The angle of this Game Object as expressed in degrees.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in radians, see the `rotation` property instead.",
              "name": "angle",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "rotation": {
              "defaultValue": null,
              "description": "The angle of this Game Object in radians.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in degrees, see the `angle` property instead.",
              "name": "rotation",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "x": {
              "defaultValue": null,
              "description": "The x position of this Game Object.",
              "name": "x",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "y": {
              "defaultValue": null,
              "description": "The y position of this Game Object.",
              "name": "y",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "z": {
              "defaultValue": null,
              "description": "The z position of this Game Object.\nNote: Do not use this value to set the z-index, instead see the `depth` property.",
              "name": "z",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "w": {
              "defaultValue": null,
              "description": "The w position of this Game Object.",
              "name": "w",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scale": {
              "defaultValue": null,
              "description": "",
              "name": "scale",
              "required": false,
              "type": {
                "name": "number | (Point & { point?: Point | undefined; }) | undefined"
              }
            },
            "active": {
              "defaultValue": null,
              "description": "",
              "name": "active",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "name": {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "runChildUpdate": {
              "defaultValue": null,
              "description": "",
              "name": "runChildUpdate",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "alpha": {
              "defaultValue": null,
              "description": "",
              "name": "alpha",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tint": {
              "defaultValue": null,
              "description": "",
              "name": "tint",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tintFill": {
              "defaultValue": null,
              "description": "",
              "name": "tintFill",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "ref": {
              "defaultValue": null,
              "description": "",
              "name": "ref",
              "required": false,
              "type": {
                "name": "((instance: Group | null) => void) | RefObject<Group> | null | undefined"
              }
            },
            "key": {
              "defaultValue": null,
              "description": "",
              "name": "key",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "../packages/react-phaser-fiber/src/components/Image.tsx",
      "value": [
        {
          "description": "",
          "displayName": "Image",
          "methods": [],
          "props": {
            "instance": {
              "defaultValue": null,
              "description": "",
              "name": "instance",
              "required": false,
              "type": {
                "name": "Image | undefined"
              }
            },
            "depth": {
              "defaultValue": null,
              "description": "The depth of this Game Object within the Scene.\n\r\nThe depth is also known as the 'z-index' in some environments, and allows you to change the rendering order\r\nof Game Objects, without actually moving their position in the display list.\r\n\r\nThe depth starts from zero (the default value) and increases from that point. A Game Object with a higher depth\r\nvalue will always render in front of one with a lower value.\r\n\r\nSetting the depth will queue a depth sort event within the Scene.",
              "name": "depth",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originX": {
              "defaultValue": null,
              "description": "The horizontal origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the left of the Game Object.",
              "name": "originX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originY": {
              "defaultValue": null,
              "description": "The vertical origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the top of the Game Object.",
              "name": "originY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginX": {
              "defaultValue": null,
              "description": "The horizontal display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginY": {
              "defaultValue": null,
              "description": "The vertical display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "angle": {
              "defaultValue": null,
              "description": "The angle of this Game Object as expressed in degrees.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in radians, see the `rotation` property instead.",
              "name": "angle",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "rotation": {
              "defaultValue": null,
              "description": "The angle of this Game Object in radians.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in degrees, see the `angle` property instead.",
              "name": "rotation",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "x": {
              "defaultValue": null,
              "description": "The x position of this Game Object.",
              "name": "x",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "y": {
              "defaultValue": null,
              "description": "The y position of this Game Object.",
              "name": "y",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "z": {
              "defaultValue": null,
              "description": "The z position of this Game Object.\nNote: Do not use this value to set the z-index, instead see the `depth` property.",
              "name": "z",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "w": {
              "defaultValue": null,
              "description": "The w position of this Game Object.",
              "name": "w",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scale": {
              "defaultValue": null,
              "description": "",
              "name": "scale",
              "required": false,
              "type": {
                "name": "number | (Point & { point?: Point | undefined; }) | undefined"
              }
            },
            "active": {
              "defaultValue": null,
              "description": "",
              "name": "active",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "name": {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "alpha": {
              "defaultValue": null,
              "description": "",
              "name": "alpha",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tint": {
              "defaultValue": null,
              "description": "",
              "name": "tint",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tintFill": {
              "defaultValue": null,
              "description": "",
              "name": "tintFill",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "blendMode": {
              "defaultValue": null,
              "description": "Sets the Blend Mode being used by this Game Object.\n\r\nThis can be a const, such as `Phaser.BlendModes.SCREEN`, or an integer, such as 4 (for Overlay)\r\n\r\nUnder WebGL only the following Blend Modes are available:\r\n\r\n* ADD\r\n* MULTIPLY\r\n* SCREEN\r\n* ERASE\r\n\r\nCanvas has more available depending on browser support.\r\n\r\nYou can also create your own custom Blend Modes in WebGL.\r\n\r\nBlend modes have different effects under Canvas and WebGL, and from browser to browser, depending\r\non support. Blend Modes also cause a WebGL batch flush should it encounter a new blend mode. For these\r\nreasons try to be careful about the construction of your Scene and the frequency of which blend modes\r\nare used.",
              "name": "blendMode",
              "required": false,
              "type": {
                "name": "string | BlendModes | undefined"
              }
            },
            "flipX": {
              "defaultValue": null,
              "description": "The horizontally flipped state of the Game Object.\n\r\nA Game Object that is flipped horizontally will render inversed on the horizontal axis.\r\nFlipping always takes place from the middle of the texture and does not impact the scale value.\r\nIf this Game Object has a physics body, it will not change the body. This is a rendering toggle only.",
              "name": "flipX",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "flipY": {
              "defaultValue": null,
              "description": "The vertically flipped state of the Game Object.\n\r\nA Game Object that is flipped vertically will render inversed on the vertical axis (i.e. upside down)\r\nFlipping always takes place from the middle of the texture and does not impact the scale value.\r\nIf this Game Object has a physics body, it will not change the body. This is a rendering toggle only.",
              "name": "flipY",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "mask": {
              "defaultValue": null,
              "description": "The Mask this Game Object is using during render.",
              "name": "mask",
              "required": false,
              "type": {
                "name": "BitmapMask | GeometryMask | undefined"
              }
            },
            "displayHeight": {
              "defaultValue": null,
              "description": "The displayed height of this Game Object.\n\r\nThis value takes into account the scale factor.\r\n\r\nSetting this value will adjust the Game Object's scale property.",
              "name": "displayHeight",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayWidth": {
              "defaultValue": null,
              "description": "The displayed width of this Game Object.\n\r\nThis value takes into account the scale factor.\r\n\r\nSetting this value will adjust the Game Object's scale property.",
              "name": "displayWidth",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "height": {
              "defaultValue": null,
              "description": "The native (un-scaled) height of this Game Object.\n\r\nChanging this value will not change the size that the Game Object is rendered in-game.\r\nFor that you need to either set the scale of the Game Object (`setScale`) or use\r\nthe `displayHeight` property.",
              "name": "height",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "width": {
              "defaultValue": null,
              "description": "The native (un-scaled) width of this Game Object.\n\r\nChanging this value will not change the size that the Game Object is rendered in-game.\r\nFor that you need to either set the scale of the Game Object (`setScale`) or use\r\nthe `displayWidth` property.",
              "name": "width",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scrollFactorX": {
              "defaultValue": null,
              "description": "The horizontal scroll factor of this Game Object.\n\r\nThe scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n\r\nWhen a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\nIt does not change the Game Objects actual position values.\r\n\r\nA value of 1 means it will move exactly in sync with a camera.\r\nA value of 0 means it will not move at all, even if the camera moves.\r\nOther values control the degree to which the camera movement is mapped to this Game Object.\r\n\r\nPlease be aware that scroll factor values other than 1 are not taken in to consideration when\r\ncalculating physics collisions. Bodies always collide based on their world position, but changing\r\nthe scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\nthem from physics bodies if not accounted for in your code.",
              "name": "scrollFactorX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scrollFactorY": {
              "defaultValue": null,
              "description": "The vertical scroll factor of this Game Object.\n\r\nThe scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n\r\nWhen a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\nIt does not change the Game Objects actual position values.\r\n\r\nA value of 1 means it will move exactly in sync with a camera.\r\nA value of 0 means it will not move at all, even if the camera moves.\r\nOther values control the degree to which the camera movement is mapped to this Game Object.\r\n\r\nPlease be aware that scroll factor values other than 1 are not taken in to consideration when\r\ncalculating physics collisions. Bodies always collide based on their world position, but changing\r\nthe scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\nthem from physics bodies if not accounted for in your code.",
              "name": "scrollFactorY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "visible": {
              "defaultValue": null,
              "description": "The visible state of the Game Object.\n\r\nAn invisible Game Object will skip rendering, but will still process update logic.",
              "name": "visible",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "tabIndex": {
              "defaultValue": null,
              "description": "",
              "name": "tabIndex",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "data": {
              "defaultValue": null,
              "description": "",
              "name": "data",
              "required": false,
              "type": {
                "name": "any"
              }
            },
            "renderFlags": {
              "defaultValue": null,
              "description": "",
              "name": "renderFlags",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "cameraFilter": {
              "defaultValue": null,
              "description": "",
              "name": "cameraFilter",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "ignoreDestroy": {
              "defaultValue": null,
              "description": "",
              "name": "ignoreDestroy",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "interactive": {
              "defaultValue": null,
              "description": "",
              "name": "interactive",
              "required": false,
              "type": {
                "name": "{ shape: any; callback?: HitAreaCallback | undefined; dropZone?: boolean | undefined; } | undefined"
              }
            },
            "crop": {
              "defaultValue": null,
              "description": "",
              "name": "crop",
              "required": false,
              "type": {
                "name": "{ x?: number | undefined; y?: number | undefined; width?: number | undefined; height?: number | undefined; } | undefined"
              }
            },
            "isCropped": {
              "defaultValue": null,
              "description": "",
              "name": "isCropped",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "pipeline": {
              "defaultValue": null,
              "description": "",
              "name": "pipeline",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "setSizeToFrame": {
              "defaultValue": null,
              "description": "",
              "name": "setSizeToFrame",
              "required": false,
              "type": {
                "name": "Frame | undefined"
              }
            },
            "texture": {
              "defaultValue": null,
              "description": "",
              "name": "texture",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "frame": {
              "defaultValue": null,
              "description": "",
              "name": "frame",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "ref": {
              "defaultValue": null,
              "description": "",
              "name": "ref",
              "required": false,
              "type": {
                "name": "((instance: Image | null) => void) | RefObject<Image> | null | undefined"
              }
            },
            "key": {
              "defaultValue": null,
              "description": "",
              "name": "key",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "../packages/react-phaser-fiber/src/components/MatterCollider.tsx",
      "value": [
        {
          "description": "Creates a collider between the parent GameObject component and the \"with\" prop. The\n\"with\" prop can either be a GameObject, a ref to a GameObject, or a string matching\nthe name of a GameObject (in Phaser).\n\n```\n  <MatterImage {...props}>\n    <MatterCollider with=\"coin\">\n  </MatterImage>\n```\n\nYou can also use it with a custom GameObject component\n\n```\n  <GameObject instance={instance}>\n    <MatterCollider with=\"coin\">\n  </GameObject>\n```",
          "displayName": "MatterCollider",
          "methods": [],
          "props": {
            "with": {
              "defaultValue": null,
              "description": "",
              "name": "with",
              "required": true,
              "type": {
                "name": "With"
              }
            },
            "onCollide": {
              "defaultValue": null,
              "description": "",
              "name": "onCollide",
              "required": false,
              "type": {
                "name": "((self: any, other: With extends string ? any : With) => any) | undefined"
              }
            },
            "onCollideActive": {
              "defaultValue": null,
              "description": "",
              "name": "onCollideActive",
              "required": false,
              "type": {
                "name": "((self: any, other: With extends string ? any : With) => any) | undefined"
              }
            },
            "onCollideEnd": {
              "defaultValue": null,
              "description": "",
              "name": "onCollideEnd",
              "required": false,
              "type": {
                "name": "((self: any, other: With extends string ? any : With) => any) | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "../packages/react-phaser-fiber/src/components/MatterImage.tsx",
      "value": [
        {
          "description": "",
          "displayName": "MatterImage",
          "methods": [],
          "props": {
            "instance": {
              "defaultValue": null,
              "description": "",
              "name": "instance",
              "required": false,
              "type": {
                "name": "Image | undefined"
              }
            },
            "depth": {
              "defaultValue": null,
              "description": "The depth of this Game Object within the Scene.\n\r\nThe depth is also known as the 'z-index' in some environments, and allows you to change the rendering order\r\nof Game Objects, without actually moving their position in the display list.\r\n\r\nThe depth starts from zero (the default value) and increases from that point. A Game Object with a higher depth\r\nvalue will always render in front of one with a lower value.\r\n\r\nSetting the depth will queue a depth sort event within the Scene.",
              "name": "depth",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originX": {
              "defaultValue": null,
              "description": "The horizontal origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the left of the Game Object.",
              "name": "originX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originY": {
              "defaultValue": null,
              "description": "The vertical origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the top of the Game Object.",
              "name": "originY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginX": {
              "defaultValue": null,
              "description": "The horizontal display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginY": {
              "defaultValue": null,
              "description": "The vertical display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "angle": {
              "defaultValue": null,
              "description": "The angle of this Game Object as expressed in degrees.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in radians, see the `rotation` property instead.",
              "name": "angle",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "rotation": {
              "defaultValue": null,
              "description": "The angle of this Game Object in radians.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in degrees, see the `angle` property instead.",
              "name": "rotation",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "x": {
              "defaultValue": null,
              "description": "The x position of this Game Object.",
              "name": "x",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "y": {
              "defaultValue": null,
              "description": "The y position of this Game Object.",
              "name": "y",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "z": {
              "defaultValue": null,
              "description": "The z position of this Game Object.\nNote: Do not use this value to set the z-index, instead see the `depth` property.",
              "name": "z",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "w": {
              "defaultValue": null,
              "description": "The w position of this Game Object.",
              "name": "w",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scale": {
              "defaultValue": null,
              "description": "",
              "name": "scale",
              "required": false,
              "type": {
                "name": "number | (Point & { point?: Point | undefined; }) | undefined"
              }
            },
            "active": {
              "defaultValue": null,
              "description": "",
              "name": "active",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "name": {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "alpha": {
              "defaultValue": null,
              "description": "",
              "name": "alpha",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tint": {
              "defaultValue": null,
              "description": "",
              "name": "tint",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tintFill": {
              "defaultValue": null,
              "description": "",
              "name": "tintFill",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "velocity": {
              "defaultValue": null,
              "description": "",
              "name": "velocity",
              "required": false,
              "type": {
                "name": "number | Point | undefined"
              }
            },
            "velocityX": {
              "defaultValue": null,
              "description": "",
              "name": "velocityX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "velocityY": {
              "defaultValue": null,
              "description": "",
              "name": "velocityY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "blendMode": {
              "defaultValue": null,
              "description": "Sets the Blend Mode being used by this Game Object.\n\r\nThis can be a const, such as `Phaser.BlendModes.SCREEN`, or an integer, such as 4 (for Overlay)\r\n\r\nUnder WebGL only the following Blend Modes are available:\r\n\r\n* ADD\r\n* MULTIPLY\r\n* SCREEN\r\n* ERASE\r\n\r\nCanvas has more available depending on browser support.\r\n\r\nYou can also create your own custom Blend Modes in WebGL.\r\n\r\nBlend modes have different effects under Canvas and WebGL, and from browser to browser, depending\r\non support. Blend Modes also cause a WebGL batch flush should it encounter a new blend mode. For these\r\nreasons try to be careful about the construction of your Scene and the frequency of which blend modes\r\nare used.",
              "name": "blendMode",
              "required": false,
              "type": {
                "name": "string | BlendModes | undefined"
              }
            },
            "flipX": {
              "defaultValue": null,
              "description": "The horizontally flipped state of the Game Object.\n\r\nA Game Object that is flipped horizontally will render inversed on the horizontal axis.\r\nFlipping always takes place from the middle of the texture and does not impact the scale value.\r\nIf this Game Object has a physics body, it will not change the body. This is a rendering toggle only.",
              "name": "flipX",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "flipY": {
              "defaultValue": null,
              "description": "The vertically flipped state of the Game Object.\n\r\nA Game Object that is flipped vertically will render inversed on the vertical axis (i.e. upside down)\r\nFlipping always takes place from the middle of the texture and does not impact the scale value.\r\nIf this Game Object has a physics body, it will not change the body. This is a rendering toggle only.",
              "name": "flipY",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "mask": {
              "defaultValue": null,
              "description": "The Mask this Game Object is using during render.",
              "name": "mask",
              "required": false,
              "type": {
                "name": "BitmapMask | GeometryMask | undefined"
              }
            },
            "displayHeight": {
              "defaultValue": null,
              "description": "The displayed height of this Game Object.\n\r\nThis value takes into account the scale factor.\r\n\r\nSetting this value will adjust the Game Object's scale property.",
              "name": "displayHeight",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayWidth": {
              "defaultValue": null,
              "description": "The displayed width of this Game Object.\n\r\nThis value takes into account the scale factor.\r\n\r\nSetting this value will adjust the Game Object's scale property.",
              "name": "displayWidth",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "height": {
              "defaultValue": null,
              "description": "The native (un-scaled) height of this Game Object.\n\r\nChanging this value will not change the size that the Game Object is rendered in-game.\r\nFor that you need to either set the scale of the Game Object (`setScale`) or use\r\nthe `displayHeight` property.",
              "name": "height",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "width": {
              "defaultValue": null,
              "description": "The native (un-scaled) width of this Game Object.\n\r\nChanging this value will not change the size that the Game Object is rendered in-game.\r\nFor that you need to either set the scale of the Game Object (`setScale`) or use\r\nthe `displayWidth` property.",
              "name": "width",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scrollFactorX": {
              "defaultValue": null,
              "description": "The horizontal scroll factor of this Game Object.\n\r\nThe scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n\r\nWhen a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\nIt does not change the Game Objects actual position values.\r\n\r\nA value of 1 means it will move exactly in sync with a camera.\r\nA value of 0 means it will not move at all, even if the camera moves.\r\nOther values control the degree to which the camera movement is mapped to this Game Object.\r\n\r\nPlease be aware that scroll factor values other than 1 are not taken in to consideration when\r\ncalculating physics collisions. Bodies always collide based on their world position, but changing\r\nthe scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\nthem from physics bodies if not accounted for in your code.",
              "name": "scrollFactorX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scrollFactorY": {
              "defaultValue": null,
              "description": "The vertical scroll factor of this Game Object.\n\r\nThe scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n\r\nWhen a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\nIt does not change the Game Objects actual position values.\r\n\r\nA value of 1 means it will move exactly in sync with a camera.\r\nA value of 0 means it will not move at all, even if the camera moves.\r\nOther values control the degree to which the camera movement is mapped to this Game Object.\r\n\r\nPlease be aware that scroll factor values other than 1 are not taken in to consideration when\r\ncalculating physics collisions. Bodies always collide based on their world position, but changing\r\nthe scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\nthem from physics bodies if not accounted for in your code.",
              "name": "scrollFactorY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "visible": {
              "defaultValue": null,
              "description": "The visible state of the Game Object.\n\r\nAn invisible Game Object will skip rendering, but will still process update logic.",
              "name": "visible",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "tabIndex": {
              "defaultValue": null,
              "description": "",
              "name": "tabIndex",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "data": {
              "defaultValue": null,
              "description": "",
              "name": "data",
              "required": false,
              "type": {
                "name": "any"
              }
            },
            "renderFlags": {
              "defaultValue": null,
              "description": "",
              "name": "renderFlags",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "cameraFilter": {
              "defaultValue": null,
              "description": "",
              "name": "cameraFilter",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "ignoreDestroy": {
              "defaultValue": null,
              "description": "",
              "name": "ignoreDestroy",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "interactive": {
              "defaultValue": null,
              "description": "",
              "name": "interactive",
              "required": false,
              "type": {
                "name": "{ shape: any; callback?: HitAreaCallback | undefined; dropZone?: boolean | undefined; } | undefined"
              }
            },
            "crop": {
              "defaultValue": null,
              "description": "",
              "name": "crop",
              "required": false,
              "type": {
                "name": "{ x?: number | undefined; y?: number | undefined; width?: number | undefined; height?: number | undefined; } | undefined"
              }
            },
            "isCropped": {
              "defaultValue": null,
              "description": "",
              "name": "isCropped",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "pipeline": {
              "defaultValue": null,
              "description": "",
              "name": "pipeline",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "setSizeToFrame": {
              "defaultValue": null,
              "description": "",
              "name": "setSizeToFrame",
              "required": false,
              "type": {
                "name": "Frame | undefined"
              }
            },
            "texture": {
              "defaultValue": null,
              "description": "",
              "name": "texture",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "frame": {
              "defaultValue": null,
              "description": "",
              "name": "frame",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "angularVelocity": {
              "defaultValue": null,
              "description": "",
              "name": "angularVelocity",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "bounce": {
              "defaultValue": null,
              "description": "",
              "name": "bounce",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "friction": {
              "defaultValue": null,
              "description": "",
              "name": "friction",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "mass": {
              "defaultValue": null,
              "description": "",
              "name": "mass",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "circle": {
              "defaultValue": null,
              "description": "",
              "name": "circle",
              "required": false,
              "type": {
                "name": "MatterCircleProps | undefined"
              }
            },
            "static": {
              "defaultValue": null,
              "description": "",
              "name": "static",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "collidesWith": {
              "defaultValue": null,
              "description": "",
              "name": "collidesWith",
              "required": false,
              "type": {
                "name": "number[] | undefined"
              }
            },
            "collisionCategory": {
              "defaultValue": null,
              "description": "",
              "name": "collisionCategory",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "collisionGroup": {
              "defaultValue": null,
              "description": "",
              "name": "collisionGroup",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "force": {
              "defaultValue": null,
              "description": "",
              "name": "force",
              "required": false,
              "type": {
                "name": "Point | undefined"
              }
            },
            "forceFrom": {
              "defaultValue": null,
              "description": "",
              "name": "forceFrom",
              "required": false,
              "type": {
                "name": "{ position: Point; force: Point; } | undefined"
              }
            },
            "thrust": {
              "defaultValue": null,
              "description": "",
              "name": "thrust",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "thrustBack": {
              "defaultValue": null,
              "description": "",
              "name": "thrustBack",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "thrustLeft": {
              "defaultValue": null,
              "description": "",
              "name": "thrustLeft",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "thrustRight": {
              "defaultValue": null,
              "description": "",
              "name": "thrustRight",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "frictionAir": {
              "defaultValue": null,
              "description": "",
              "name": "frictionAir",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "frictionStatic": {
              "defaultValue": null,
              "description": "",
              "name": "frictionStatic",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "ignoreGravity": {
              "defaultValue": null,
              "description": "",
              "name": "ignoreGravity",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "density": {
              "defaultValue": null,
              "description": "",
              "name": "density",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "sensor": {
              "defaultValue": null,
              "description": "",
              "name": "sensor",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "polygon": {
              "defaultValue": null,
              "description": "",
              "name": "polygon",
              "required": false,
              "type": {
                "name": "MatterPolygonProps | undefined"
              }
            },
            "rectangle": {
              "defaultValue": null,
              "description": "",
              "name": "rectangle",
              "required": false,
              "type": {
                "name": "MatterRectangleProps | undefined"
              }
            },
            "trapezoid": {
              "defaultValue": null,
              "description": "",
              "name": "trapezoid",
              "required": false,
              "type": {
                "name": "MatterTrapezoidProps | undefined"
              }
            },
            "sleep": {
              "defaultValue": null,
              "description": "",
              "name": "sleep",
              "required": false,
              "type": {
                "name": "{ start?: boolean | undefined; end?: boolean | undefined; threshold?: number | undefined; } | undefined"
              }
            },
            "fixedRotation": {
              "defaultValue": null,
              "description": "",
              "name": "fixedRotation",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "ref": {
              "defaultValue": null,
              "description": "",
              "name": "ref",
              "required": false,
              "type": {
                "name": "((instance: Image | null) => void) | RefObject<Image> | null | undefined"
              }
            },
            "key": {
              "defaultValue": null,
              "description": "",
              "name": "key",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "../packages/react-phaser-fiber/src/components/MatterSprite.tsx",
      "value": [
        {
          "description": "",
          "displayName": "MatterSprite",
          "methods": [],
          "props": {
            "instance": {
              "defaultValue": null,
              "description": "",
              "name": "instance",
              "required": false,
              "type": {
                "name": "Sprite | undefined"
              }
            },
            "depth": {
              "defaultValue": null,
              "description": "The depth of this Game Object within the Scene.\n\r\nThe depth is also known as the 'z-index' in some environments, and allows you to change the rendering order\r\nof Game Objects, without actually moving their position in the display list.\r\n\r\nThe depth starts from zero (the default value) and increases from that point. A Game Object with a higher depth\r\nvalue will always render in front of one with a lower value.\r\n\r\nSetting the depth will queue a depth sort event within the Scene.",
              "name": "depth",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originX": {
              "defaultValue": null,
              "description": "The horizontal origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the left of the Game Object.",
              "name": "originX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originY": {
              "defaultValue": null,
              "description": "The vertical origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the top of the Game Object.",
              "name": "originY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginX": {
              "defaultValue": null,
              "description": "The horizontal display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginY": {
              "defaultValue": null,
              "description": "The vertical display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "angle": {
              "defaultValue": null,
              "description": "The angle of this Game Object as expressed in degrees.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in radians, see the `rotation` property instead.",
              "name": "angle",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "rotation": {
              "defaultValue": null,
              "description": "The angle of this Game Object in radians.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in degrees, see the `angle` property instead.",
              "name": "rotation",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "x": {
              "defaultValue": null,
              "description": "The x position of this Game Object.",
              "name": "x",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "y": {
              "defaultValue": null,
              "description": "The y position of this Game Object.",
              "name": "y",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "z": {
              "defaultValue": null,
              "description": "The z position of this Game Object.\nNote: Do not use this value to set the z-index, instead see the `depth` property.",
              "name": "z",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "w": {
              "defaultValue": null,
              "description": "The w position of this Game Object.",
              "name": "w",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scale": {
              "defaultValue": null,
              "description": "",
              "name": "scale",
              "required": false,
              "type": {
                "name": "number | (Point & { point?: Point | undefined; }) | undefined"
              }
            },
            "active": {
              "defaultValue": null,
              "description": "",
              "name": "active",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "name": {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "alpha": {
              "defaultValue": null,
              "description": "",
              "name": "alpha",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tint": {
              "defaultValue": null,
              "description": "",
              "name": "tint",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tintFill": {
              "defaultValue": null,
              "description": "",
              "name": "tintFill",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "velocity": {
              "defaultValue": null,
              "description": "",
              "name": "velocity",
              "required": false,
              "type": {
                "name": "number | Point | undefined"
              }
            },
            "velocityX": {
              "defaultValue": null,
              "description": "",
              "name": "velocityX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "velocityY": {
              "defaultValue": null,
              "description": "",
              "name": "velocityY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "blendMode": {
              "defaultValue": null,
              "description": "Sets the Blend Mode being used by this Game Object.\n\r\nThis can be a const, such as `Phaser.BlendModes.SCREEN`, or an integer, such as 4 (for Overlay)\r\n\r\nUnder WebGL only the following Blend Modes are available:\r\n\r\n* ADD\r\n* MULTIPLY\r\n* SCREEN\r\n* ERASE\r\n\r\nCanvas has more available depending on browser support.\r\n\r\nYou can also create your own custom Blend Modes in WebGL.\r\n\r\nBlend modes have different effects under Canvas and WebGL, and from browser to browser, depending\r\non support. Blend Modes also cause a WebGL batch flush should it encounter a new blend mode. For these\r\nreasons try to be careful about the construction of your Scene and the frequency of which blend modes\r\nare used.",
              "name": "blendMode",
              "required": false,
              "type": {
                "name": "string | BlendModes | undefined"
              }
            },
            "flipX": {
              "defaultValue": null,
              "description": "The horizontally flipped state of the Game Object.\n\r\nA Game Object that is flipped horizontally will render inversed on the horizontal axis.\r\nFlipping always takes place from the middle of the texture and does not impact the scale value.\r\nIf this Game Object has a physics body, it will not change the body. This is a rendering toggle only.",
              "name": "flipX",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "flipY": {
              "defaultValue": null,
              "description": "The vertically flipped state of the Game Object.\n\r\nA Game Object that is flipped vertically will render inversed on the vertical axis (i.e. upside down)\r\nFlipping always takes place from the middle of the texture and does not impact the scale value.\r\nIf this Game Object has a physics body, it will not change the body. This is a rendering toggle only.",
              "name": "flipY",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "mask": {
              "defaultValue": null,
              "description": "The Mask this Game Object is using during render.",
              "name": "mask",
              "required": false,
              "type": {
                "name": "BitmapMask | GeometryMask | undefined"
              }
            },
            "displayHeight": {
              "defaultValue": null,
              "description": "The displayed height of this Game Object.\n\r\nThis value takes into account the scale factor.\r\n\r\nSetting this value will adjust the Game Object's scale property.",
              "name": "displayHeight",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayWidth": {
              "defaultValue": null,
              "description": "The displayed width of this Game Object.\n\r\nThis value takes into account the scale factor.\r\n\r\nSetting this value will adjust the Game Object's scale property.",
              "name": "displayWidth",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "height": {
              "defaultValue": null,
              "description": "The native (un-scaled) height of this Game Object.\n\r\nChanging this value will not change the size that the Game Object is rendered in-game.\r\nFor that you need to either set the scale of the Game Object (`setScale`) or use\r\nthe `displayHeight` property.",
              "name": "height",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "width": {
              "defaultValue": null,
              "description": "The native (un-scaled) width of this Game Object.\n\r\nChanging this value will not change the size that the Game Object is rendered in-game.\r\nFor that you need to either set the scale of the Game Object (`setScale`) or use\r\nthe `displayWidth` property.",
              "name": "width",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scrollFactorX": {
              "defaultValue": null,
              "description": "The horizontal scroll factor of this Game Object.\n\r\nThe scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n\r\nWhen a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\nIt does not change the Game Objects actual position values.\r\n\r\nA value of 1 means it will move exactly in sync with a camera.\r\nA value of 0 means it will not move at all, even if the camera moves.\r\nOther values control the degree to which the camera movement is mapped to this Game Object.\r\n\r\nPlease be aware that scroll factor values other than 1 are not taken in to consideration when\r\ncalculating physics collisions. Bodies always collide based on their world position, but changing\r\nthe scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\nthem from physics bodies if not accounted for in your code.",
              "name": "scrollFactorX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scrollFactorY": {
              "defaultValue": null,
              "description": "The vertical scroll factor of this Game Object.\n\r\nThe scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n\r\nWhen a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\nIt does not change the Game Objects actual position values.\r\n\r\nA value of 1 means it will move exactly in sync with a camera.\r\nA value of 0 means it will not move at all, even if the camera moves.\r\nOther values control the degree to which the camera movement is mapped to this Game Object.\r\n\r\nPlease be aware that scroll factor values other than 1 are not taken in to consideration when\r\ncalculating physics collisions. Bodies always collide based on their world position, but changing\r\nthe scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\nthem from physics bodies if not accounted for in your code.",
              "name": "scrollFactorY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "visible": {
              "defaultValue": null,
              "description": "The visible state of the Game Object.\n\r\nAn invisible Game Object will skip rendering, but will still process update logic.",
              "name": "visible",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "tabIndex": {
              "defaultValue": null,
              "description": "",
              "name": "tabIndex",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "data": {
              "defaultValue": null,
              "description": "",
              "name": "data",
              "required": false,
              "type": {
                "name": "any"
              }
            },
            "renderFlags": {
              "defaultValue": null,
              "description": "",
              "name": "renderFlags",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "cameraFilter": {
              "defaultValue": null,
              "description": "",
              "name": "cameraFilter",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "ignoreDestroy": {
              "defaultValue": null,
              "description": "",
              "name": "ignoreDestroy",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "interactive": {
              "defaultValue": null,
              "description": "",
              "name": "interactive",
              "required": false,
              "type": {
                "name": "{ shape: any; callback?: HitAreaCallback | undefined; dropZone?: boolean | undefined; } | undefined"
              }
            },
            "crop": {
              "defaultValue": null,
              "description": "",
              "name": "crop",
              "required": false,
              "type": {
                "name": "{ x?: number | undefined; y?: number | undefined; width?: number | undefined; height?: number | undefined; } | undefined"
              }
            },
            "isCropped": {
              "defaultValue": null,
              "description": "",
              "name": "isCropped",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "pipeline": {
              "defaultValue": null,
              "description": "",
              "name": "pipeline",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "setSizeToFrame": {
              "defaultValue": null,
              "description": "",
              "name": "setSizeToFrame",
              "required": false,
              "type": {
                "name": "Frame | undefined"
              }
            },
            "texture": {
              "defaultValue": null,
              "description": "",
              "name": "texture",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "frame": {
              "defaultValue": null,
              "description": "",
              "name": "frame",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "angularVelocity": {
              "defaultValue": null,
              "description": "",
              "name": "angularVelocity",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "bounce": {
              "defaultValue": null,
              "description": "",
              "name": "bounce",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "friction": {
              "defaultValue": null,
              "description": "",
              "name": "friction",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "mass": {
              "defaultValue": null,
              "description": "",
              "name": "mass",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "circle": {
              "defaultValue": null,
              "description": "",
              "name": "circle",
              "required": false,
              "type": {
                "name": "MatterCircleProps | undefined"
              }
            },
            "static": {
              "defaultValue": null,
              "description": "",
              "name": "static",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "animation": {
              "defaultValue": null,
              "description": "Plays the animation by key",
              "name": "animation",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "accumulator": {
              "defaultValue": null,
              "description": "",
              "name": "accumulator",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "delay": {
              "defaultValue": null,
              "description": "",
              "name": "delay",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "duration": {
              "defaultValue": null,
              "description": "",
              "name": "duration",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "forward": {
              "defaultValue": null,
              "description": "",
              "name": "forward",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "frameRate": {
              "defaultValue": null,
              "description": "",
              "name": "frameRate",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "isPlaying": {
              "defaultValue": null,
              "description": "",
              "name": "isPlaying",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "msPerFrame": {
              "defaultValue": null,
              "description": "",
              "name": "msPerFrame",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "skipMissedFrames": {
              "defaultValue": null,
              "description": "",
              "name": "skipMissedFrames",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "repeat": {
              "defaultValue": null,
              "description": "",
              "name": "repeat",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "repeatDelay": {
              "defaultValue": null,
              "description": "",
              "name": "repeatDelay",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "timeScale": {
              "defaultValue": null,
              "description": "",
              "name": "timeScale",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "yoyo": {
              "defaultValue": null,
              "description": "",
              "name": "yoyo",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "progress": {
              "defaultValue": null,
              "description": "",
              "name": "progress",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "stopOnFrame": {
              "defaultValue": null,
              "description": "",
              "name": "stopOnFrame",
              "required": false,
              "type": {
                "name": "AnimationFrame | undefined"
              }
            },
            "stopAfterDelay": {
              "defaultValue": null,
              "description": "",
              "name": "stopAfterDelay",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "collidesWith": {
              "defaultValue": null,
              "description": "",
              "name": "collidesWith",
              "required": false,
              "type": {
                "name": "number[] | undefined"
              }
            },
            "collisionCategory": {
              "defaultValue": null,
              "description": "",
              "name": "collisionCategory",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "collisionGroup": {
              "defaultValue": null,
              "description": "",
              "name": "collisionGroup",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "force": {
              "defaultValue": null,
              "description": "",
              "name": "force",
              "required": false,
              "type": {
                "name": "Point | undefined"
              }
            },
            "forceFrom": {
              "defaultValue": null,
              "description": "",
              "name": "forceFrom",
              "required": false,
              "type": {
                "name": "{ position: Point; force: Point; } | undefined"
              }
            },
            "thrust": {
              "defaultValue": null,
              "description": "",
              "name": "thrust",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "thrustBack": {
              "defaultValue": null,
              "description": "",
              "name": "thrustBack",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "thrustLeft": {
              "defaultValue": null,
              "description": "",
              "name": "thrustLeft",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "thrustRight": {
              "defaultValue": null,
              "description": "",
              "name": "thrustRight",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "frictionAir": {
              "defaultValue": null,
              "description": "",
              "name": "frictionAir",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "frictionStatic": {
              "defaultValue": null,
              "description": "",
              "name": "frictionStatic",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "ignoreGravity": {
              "defaultValue": null,
              "description": "",
              "name": "ignoreGravity",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "density": {
              "defaultValue": null,
              "description": "",
              "name": "density",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "sensor": {
              "defaultValue": null,
              "description": "",
              "name": "sensor",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "polygon": {
              "defaultValue": null,
              "description": "",
              "name": "polygon",
              "required": false,
              "type": {
                "name": "MatterPolygonProps | undefined"
              }
            },
            "rectangle": {
              "defaultValue": null,
              "description": "",
              "name": "rectangle",
              "required": false,
              "type": {
                "name": "MatterRectangleProps | undefined"
              }
            },
            "trapezoid": {
              "defaultValue": null,
              "description": "",
              "name": "trapezoid",
              "required": false,
              "type": {
                "name": "MatterTrapezoidProps | undefined"
              }
            },
            "sleep": {
              "defaultValue": null,
              "description": "",
              "name": "sleep",
              "required": false,
              "type": {
                "name": "{ start?: boolean | undefined; end?: boolean | undefined; threshold?: number | undefined; } | undefined"
              }
            },
            "fixedRotation": {
              "defaultValue": null,
              "description": "",
              "name": "fixedRotation",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "ref": {
              "defaultValue": null,
              "description": "",
              "name": "ref",
              "required": false,
              "type": {
                "name": "((instance: Sprite | null) => void) | RefObject<Sprite> | null | undefined"
              }
            },
            "key": {
              "defaultValue": null,
              "description": "",
              "name": "key",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "../packages/react-phaser-fiber/src/components/Sprite.tsx",
      "value": [
        {
          "description": "",
          "displayName": "Sprite",
          "methods": [],
          "props": {
            "instance": {
              "defaultValue": null,
              "description": "",
              "name": "instance",
              "required": false,
              "type": {
                "name": "Sprite | undefined"
              }
            },
            "depth": {
              "defaultValue": null,
              "description": "The depth of this Game Object within the Scene.\n\r\nThe depth is also known as the 'z-index' in some environments, and allows you to change the rendering order\r\nof Game Objects, without actually moving their position in the display list.\r\n\r\nThe depth starts from zero (the default value) and increases from that point. A Game Object with a higher depth\r\nvalue will always render in front of one with a lower value.\r\n\r\nSetting the depth will queue a depth sort event within the Scene.",
              "name": "depth",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originX": {
              "defaultValue": null,
              "description": "The horizontal origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the left of the Game Object.",
              "name": "originX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originY": {
              "defaultValue": null,
              "description": "The vertical origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the top of the Game Object.",
              "name": "originY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginX": {
              "defaultValue": null,
              "description": "The horizontal display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginY": {
              "defaultValue": null,
              "description": "The vertical display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "angle": {
              "defaultValue": null,
              "description": "The angle of this Game Object as expressed in degrees.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in radians, see the `rotation` property instead.",
              "name": "angle",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "rotation": {
              "defaultValue": null,
              "description": "The angle of this Game Object in radians.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in degrees, see the `angle` property instead.",
              "name": "rotation",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "x": {
              "defaultValue": null,
              "description": "The x position of this Game Object.",
              "name": "x",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "y": {
              "defaultValue": null,
              "description": "The y position of this Game Object.",
              "name": "y",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "z": {
              "defaultValue": null,
              "description": "The z position of this Game Object.\nNote: Do not use this value to set the z-index, instead see the `depth` property.",
              "name": "z",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "w": {
              "defaultValue": null,
              "description": "The w position of this Game Object.",
              "name": "w",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scale": {
              "defaultValue": null,
              "description": "",
              "name": "scale",
              "required": false,
              "type": {
                "name": "number | (Point & { point?: Point | undefined; }) | undefined"
              }
            },
            "active": {
              "defaultValue": null,
              "description": "",
              "name": "active",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "name": {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "alpha": {
              "defaultValue": null,
              "description": "",
              "name": "alpha",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tint": {
              "defaultValue": null,
              "description": "",
              "name": "tint",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tintFill": {
              "defaultValue": null,
              "description": "",
              "name": "tintFill",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "blendMode": {
              "defaultValue": null,
              "description": "Sets the Blend Mode being used by this Game Object.\n\r\nThis can be a const, such as `Phaser.BlendModes.SCREEN`, or an integer, such as 4 (for Overlay)\r\n\r\nUnder WebGL only the following Blend Modes are available:\r\n\r\n* ADD\r\n* MULTIPLY\r\n* SCREEN\r\n* ERASE\r\n\r\nCanvas has more available depending on browser support.\r\n\r\nYou can also create your own custom Blend Modes in WebGL.\r\n\r\nBlend modes have different effects under Canvas and WebGL, and from browser to browser, depending\r\non support. Blend Modes also cause a WebGL batch flush should it encounter a new blend mode. For these\r\nreasons try to be careful about the construction of your Scene and the frequency of which blend modes\r\nare used.",
              "name": "blendMode",
              "required": false,
              "type": {
                "name": "string | BlendModes | undefined"
              }
            },
            "flipX": {
              "defaultValue": null,
              "description": "The horizontally flipped state of the Game Object.\n\r\nA Game Object that is flipped horizontally will render inversed on the horizontal axis.\r\nFlipping always takes place from the middle of the texture and does not impact the scale value.\r\nIf this Game Object has a physics body, it will not change the body. This is a rendering toggle only.",
              "name": "flipX",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "flipY": {
              "defaultValue": null,
              "description": "The vertically flipped state of the Game Object.\n\r\nA Game Object that is flipped vertically will render inversed on the vertical axis (i.e. upside down)\r\nFlipping always takes place from the middle of the texture and does not impact the scale value.\r\nIf this Game Object has a physics body, it will not change the body. This is a rendering toggle only.",
              "name": "flipY",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "mask": {
              "defaultValue": null,
              "description": "The Mask this Game Object is using during render.",
              "name": "mask",
              "required": false,
              "type": {
                "name": "BitmapMask | GeometryMask | undefined"
              }
            },
            "displayHeight": {
              "defaultValue": null,
              "description": "The displayed height of this Game Object.\n\r\nThis value takes into account the scale factor.\r\n\r\nSetting this value will adjust the Game Object's scale property.",
              "name": "displayHeight",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayWidth": {
              "defaultValue": null,
              "description": "The displayed width of this Game Object.\n\r\nThis value takes into account the scale factor.\r\n\r\nSetting this value will adjust the Game Object's scale property.",
              "name": "displayWidth",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "height": {
              "defaultValue": null,
              "description": "The native (un-scaled) height of this Game Object.\n\r\nChanging this value will not change the size that the Game Object is rendered in-game.\r\nFor that you need to either set the scale of the Game Object (`setScale`) or use\r\nthe `displayHeight` property.",
              "name": "height",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "width": {
              "defaultValue": null,
              "description": "The native (un-scaled) width of this Game Object.\n\r\nChanging this value will not change the size that the Game Object is rendered in-game.\r\nFor that you need to either set the scale of the Game Object (`setScale`) or use\r\nthe `displayWidth` property.",
              "name": "width",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scrollFactorX": {
              "defaultValue": null,
              "description": "The horizontal scroll factor of this Game Object.\n\r\nThe scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n\r\nWhen a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\nIt does not change the Game Objects actual position values.\r\n\r\nA value of 1 means it will move exactly in sync with a camera.\r\nA value of 0 means it will not move at all, even if the camera moves.\r\nOther values control the degree to which the camera movement is mapped to this Game Object.\r\n\r\nPlease be aware that scroll factor values other than 1 are not taken in to consideration when\r\ncalculating physics collisions. Bodies always collide based on their world position, but changing\r\nthe scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\nthem from physics bodies if not accounted for in your code.",
              "name": "scrollFactorX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scrollFactorY": {
              "defaultValue": null,
              "description": "The vertical scroll factor of this Game Object.\n\r\nThe scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n\r\nWhen a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\nIt does not change the Game Objects actual position values.\r\n\r\nA value of 1 means it will move exactly in sync with a camera.\r\nA value of 0 means it will not move at all, even if the camera moves.\r\nOther values control the degree to which the camera movement is mapped to this Game Object.\r\n\r\nPlease be aware that scroll factor values other than 1 are not taken in to consideration when\r\ncalculating physics collisions. Bodies always collide based on their world position, but changing\r\nthe scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\nthem from physics bodies if not accounted for in your code.",
              "name": "scrollFactorY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "visible": {
              "defaultValue": null,
              "description": "The visible state of the Game Object.\n\r\nAn invisible Game Object will skip rendering, but will still process update logic.",
              "name": "visible",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "tabIndex": {
              "defaultValue": null,
              "description": "",
              "name": "tabIndex",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "data": {
              "defaultValue": null,
              "description": "",
              "name": "data",
              "required": false,
              "type": {
                "name": "any"
              }
            },
            "renderFlags": {
              "defaultValue": null,
              "description": "",
              "name": "renderFlags",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "cameraFilter": {
              "defaultValue": null,
              "description": "",
              "name": "cameraFilter",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "ignoreDestroy": {
              "defaultValue": null,
              "description": "",
              "name": "ignoreDestroy",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "interactive": {
              "defaultValue": null,
              "description": "",
              "name": "interactive",
              "required": false,
              "type": {
                "name": "{ shape: any; callback?: HitAreaCallback | undefined; dropZone?: boolean | undefined; } | undefined"
              }
            },
            "crop": {
              "defaultValue": null,
              "description": "",
              "name": "crop",
              "required": false,
              "type": {
                "name": "{ x?: number | undefined; y?: number | undefined; width?: number | undefined; height?: number | undefined; } | undefined"
              }
            },
            "isCropped": {
              "defaultValue": null,
              "description": "",
              "name": "isCropped",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "pipeline": {
              "defaultValue": null,
              "description": "",
              "name": "pipeline",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "setSizeToFrame": {
              "defaultValue": null,
              "description": "",
              "name": "setSizeToFrame",
              "required": false,
              "type": {
                "name": "Frame | undefined"
              }
            },
            "texture": {
              "defaultValue": null,
              "description": "",
              "name": "texture",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "frame": {
              "defaultValue": null,
              "description": "",
              "name": "frame",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "onAnimationComplete": {
              "defaultValue": null,
              "description": "",
              "name": "onAnimationComplete",
              "required": false,
              "type": {
                "name": "((animation: Animation, frame: AnimationFrame, instance: Sprite) => any) | undefined"
              }
            },
            "animation": {
              "defaultValue": null,
              "description": "Plays the animation by key",
              "name": "animation",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "accumulator": {
              "defaultValue": null,
              "description": "",
              "name": "accumulator",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "delay": {
              "defaultValue": null,
              "description": "",
              "name": "delay",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "duration": {
              "defaultValue": null,
              "description": "",
              "name": "duration",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "forward": {
              "defaultValue": null,
              "description": "",
              "name": "forward",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "frameRate": {
              "defaultValue": null,
              "description": "",
              "name": "frameRate",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "isPlaying": {
              "defaultValue": null,
              "description": "",
              "name": "isPlaying",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "msPerFrame": {
              "defaultValue": null,
              "description": "",
              "name": "msPerFrame",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "skipMissedFrames": {
              "defaultValue": null,
              "description": "",
              "name": "skipMissedFrames",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "repeat": {
              "defaultValue": null,
              "description": "",
              "name": "repeat",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "repeatDelay": {
              "defaultValue": null,
              "description": "",
              "name": "repeatDelay",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "timeScale": {
              "defaultValue": null,
              "description": "",
              "name": "timeScale",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "yoyo": {
              "defaultValue": null,
              "description": "",
              "name": "yoyo",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "progress": {
              "defaultValue": null,
              "description": "",
              "name": "progress",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "stopOnFrame": {
              "defaultValue": null,
              "description": "",
              "name": "stopOnFrame",
              "required": false,
              "type": {
                "name": "AnimationFrame | undefined"
              }
            },
            "stopAfterDelay": {
              "defaultValue": null,
              "description": "",
              "name": "stopAfterDelay",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "ref": {
              "defaultValue": null,
              "description": "",
              "name": "ref",
              "required": false,
              "type": {
                "name": "((instance: Sprite | null) => void) | RefObject<Sprite> | null | undefined"
              }
            },
            "key": {
              "defaultValue": null,
              "description": "",
              "name": "key",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "../packages/react-phaser-fiber/src/components/Text.tsx",
      "value": [
        {
          "description": "",
          "displayName": "Text",
          "methods": [],
          "props": {
            "instance": {
              "defaultValue": null,
              "description": "",
              "name": "instance",
              "required": false,
              "type": {
                "name": "Text | undefined"
              }
            },
            "depth": {
              "defaultValue": null,
              "description": "The depth of this Game Object within the Scene.\n\r\nThe depth is also known as the 'z-index' in some environments, and allows you to change the rendering order\r\nof Game Objects, without actually moving their position in the display list.\r\n\r\nThe depth starts from zero (the default value) and increases from that point. A Game Object with a higher depth\r\nvalue will always render in front of one with a lower value.\r\n\r\nSetting the depth will queue a depth sort event within the Scene.",
              "name": "depth",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originX": {
              "defaultValue": null,
              "description": "The horizontal origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the left of the Game Object.",
              "name": "originX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originY": {
              "defaultValue": null,
              "description": "The vertical origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the top of the Game Object.",
              "name": "originY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginX": {
              "defaultValue": null,
              "description": "The horizontal display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginY": {
              "defaultValue": null,
              "description": "The vertical display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "angle": {
              "defaultValue": null,
              "description": "The angle of this Game Object as expressed in degrees.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in radians, see the `rotation` property instead.",
              "name": "angle",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "rotation": {
              "defaultValue": null,
              "description": "The angle of this Game Object in radians.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in degrees, see the `angle` property instead.",
              "name": "rotation",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "x": {
              "defaultValue": null,
              "description": "The x position of this Game Object.",
              "name": "x",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "y": {
              "defaultValue": null,
              "description": "The y position of this Game Object.",
              "name": "y",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "z": {
              "defaultValue": null,
              "description": "The z position of this Game Object.\nNote: Do not use this value to set the z-index, instead see the `depth` property.",
              "name": "z",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "w": {
              "defaultValue": null,
              "description": "The w position of this Game Object.",
              "name": "w",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scale": {
              "defaultValue": null,
              "description": "",
              "name": "scale",
              "required": false,
              "type": {
                "name": "number | (Point & { point?: Point | undefined; }) | undefined"
              }
            },
            "active": {
              "defaultValue": null,
              "description": "",
              "name": "active",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "name": {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "alpha": {
              "defaultValue": null,
              "description": "",
              "name": "alpha",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tint": {
              "defaultValue": null,
              "description": "",
              "name": "tint",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tintFill": {
              "defaultValue": null,
              "description": "",
              "name": "tintFill",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "blendMode": {
              "defaultValue": null,
              "description": "Sets the Blend Mode being used by this Game Object.\n\r\nThis can be a const, such as `Phaser.BlendModes.SCREEN`, or an integer, such as 4 (for Overlay)\r\n\r\nUnder WebGL only the following Blend Modes are available:\r\n\r\n* ADD\r\n* MULTIPLY\r\n* SCREEN\r\n* ERASE\r\n\r\nCanvas has more available depending on browser support.\r\n\r\nYou can also create your own custom Blend Modes in WebGL.\r\n\r\nBlend modes have different effects under Canvas and WebGL, and from browser to browser, depending\r\non support. Blend Modes also cause a WebGL batch flush should it encounter a new blend mode. For these\r\nreasons try to be careful about the construction of your Scene and the frequency of which blend modes\r\nare used.",
              "name": "blendMode",
              "required": false,
              "type": {
                "name": "string | BlendModes | undefined"
              }
            },
            "flipX": {
              "defaultValue": null,
              "description": "The horizontally flipped state of the Game Object.\n\r\nA Game Object that is flipped horizontally will render inversed on the horizontal axis.\r\nFlipping always takes place from the middle of the texture and does not impact the scale value.\r\nIf this Game Object has a physics body, it will not change the body. This is a rendering toggle only.",
              "name": "flipX",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "flipY": {
              "defaultValue": null,
              "description": "The vertically flipped state of the Game Object.\n\r\nA Game Object that is flipped vertically will render inversed on the vertical axis (i.e. upside down)\r\nFlipping always takes place from the middle of the texture and does not impact the scale value.\r\nIf this Game Object has a physics body, it will not change the body. This is a rendering toggle only.",
              "name": "flipY",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "mask": {
              "defaultValue": null,
              "description": "The Mask this Game Object is using during render.",
              "name": "mask",
              "required": false,
              "type": {
                "name": "BitmapMask | GeometryMask | undefined"
              }
            },
            "displayHeight": {
              "defaultValue": null,
              "description": "The displayed height of this Game Object.\n\r\nThis value takes into account the scale factor.\r\n\r\nSetting this value will adjust the Game Object's scale property.",
              "name": "displayHeight",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayWidth": {
              "defaultValue": null,
              "description": "The displayed width of this Game Object.\n\r\nThis value takes into account the scale factor.\r\n\r\nSetting this value will adjust the Game Object's scale property.",
              "name": "displayWidth",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "height": {
              "defaultValue": null,
              "description": "The native (un-scaled) height of this Game Object.\n\r\nChanging this value will not change the size that the Game Object is rendered in-game.\r\nFor that you need to either set the scale of the Game Object (`setScale`) or use\r\nthe `displayHeight` property.",
              "name": "height",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "width": {
              "defaultValue": null,
              "description": "The native (un-scaled) width of this Game Object.\n\r\nChanging this value will not change the size that the Game Object is rendered in-game.\r\nFor that you need to either set the scale of the Game Object (`setScale`) or use\r\nthe `displayWidth` property.",
              "name": "width",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scrollFactorX": {
              "defaultValue": null,
              "description": "The horizontal scroll factor of this Game Object.\n\r\nThe scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n\r\nWhen a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\nIt does not change the Game Objects actual position values.\r\n\r\nA value of 1 means it will move exactly in sync with a camera.\r\nA value of 0 means it will not move at all, even if the camera moves.\r\nOther values control the degree to which the camera movement is mapped to this Game Object.\r\n\r\nPlease be aware that scroll factor values other than 1 are not taken in to consideration when\r\ncalculating physics collisions. Bodies always collide based on their world position, but changing\r\nthe scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\nthem from physics bodies if not accounted for in your code.",
              "name": "scrollFactorX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scrollFactorY": {
              "defaultValue": null,
              "description": "The vertical scroll factor of this Game Object.\n\r\nThe scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n\r\nWhen a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\nIt does not change the Game Objects actual position values.\r\n\r\nA value of 1 means it will move exactly in sync with a camera.\r\nA value of 0 means it will not move at all, even if the camera moves.\r\nOther values control the degree to which the camera movement is mapped to this Game Object.\r\n\r\nPlease be aware that scroll factor values other than 1 are not taken in to consideration when\r\ncalculating physics collisions. Bodies always collide based on their world position, but changing\r\nthe scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\nthem from physics bodies if not accounted for in your code.",
              "name": "scrollFactorY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "visible": {
              "defaultValue": null,
              "description": "The visible state of the Game Object.\n\r\nAn invisible Game Object will skip rendering, but will still process update logic.",
              "name": "visible",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "tabIndex": {
              "defaultValue": null,
              "description": "",
              "name": "tabIndex",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "data": {
              "defaultValue": null,
              "description": "",
              "name": "data",
              "required": false,
              "type": {
                "name": "any"
              }
            },
            "renderFlags": {
              "defaultValue": null,
              "description": "",
              "name": "renderFlags",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "cameraFilter": {
              "defaultValue": null,
              "description": "",
              "name": "cameraFilter",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "ignoreDestroy": {
              "defaultValue": null,
              "description": "",
              "name": "ignoreDestroy",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "interactive": {
              "defaultValue": null,
              "description": "",
              "name": "interactive",
              "required": false,
              "type": {
                "name": "{ shape: any; callback?: HitAreaCallback | undefined; dropZone?: boolean | undefined; } | undefined"
              }
            },
            "crop": {
              "defaultValue": null,
              "description": "",
              "name": "crop",
              "required": false,
              "type": {
                "name": "{ x?: number | undefined; y?: number | undefined; width?: number | undefined; height?: number | undefined; } | undefined"
              }
            },
            "isCropped": {
              "defaultValue": null,
              "description": "",
              "name": "isCropped",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "pipeline": {
              "defaultValue": null,
              "description": "",
              "name": "pipeline",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "setSizeToFrame": {
              "defaultValue": null,
              "description": "",
              "name": "setSizeToFrame",
              "required": false,
              "type": {
                "name": "Frame | undefined"
              }
            },
            "text": {
              "defaultValue": null,
              "description": "",
              "name": "text",
              "required": false,
              "type": {
                "name": "string | string[] | undefined"
              }
            },
            "style": {
              "defaultValue": null,
              "description": "",
              "name": "style",
              "required": true,
              "type": {
                "name": "TextStyle"
              }
            },
            "ref": {
              "defaultValue": null,
              "description": "",
              "name": "ref",
              "required": false,
              "type": {
                "name": "((instance: Text | null) => void) | RefObject<Text> | null | undefined"
              }
            },
            "key": {
              "defaultValue": null,
              "description": "",
              "name": "key",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "../packages/react-phaser-fiber/src/components/TileSprite.tsx",
      "value": [
        {
          "description": "",
          "displayName": "TileSprite",
          "methods": [],
          "props": {
            "instance": {
              "defaultValue": null,
              "description": "",
              "name": "instance",
              "required": false,
              "type": {
                "name": "TileSprite | undefined"
              }
            },
            "depth": {
              "defaultValue": null,
              "description": "The depth of this Game Object within the Scene.\n\r\nThe depth is also known as the 'z-index' in some environments, and allows you to change the rendering order\r\nof Game Objects, without actually moving their position in the display list.\r\n\r\nThe depth starts from zero (the default value) and increases from that point. A Game Object with a higher depth\r\nvalue will always render in front of one with a lower value.\r\n\r\nSetting the depth will queue a depth sort event within the Scene.",
              "name": "depth",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originX": {
              "defaultValue": null,
              "description": "The horizontal origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the left of the Game Object.",
              "name": "originX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "originY": {
              "defaultValue": null,
              "description": "The vertical origin of this Game Object.\nThe origin maps the relationship between the size and position of the Game Object.\r\nThe default value is 0.5, meaning all Game Objects are positioned based on their center.\r\nSetting the value to 0 means the position now relates to the top of the Game Object.",
              "name": "originY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginX": {
              "defaultValue": null,
              "description": "The horizontal display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayOriginY": {
              "defaultValue": null,
              "description": "The vertical display origin of this Game Object.\nThe origin is a normalized value between 0 and 1.\r\nThe displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.",
              "name": "displayOriginY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "angle": {
              "defaultValue": null,
              "description": "The angle of this Game Object as expressed in degrees.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in radians, see the `rotation` property instead.",
              "name": "angle",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "rotation": {
              "defaultValue": null,
              "description": "The angle of this Game Object in radians.\n\r\nPhaser uses a right-hand clockwise rotation system, where 0 is right, 90 is down, 180/-180 is left\r\nand -90 is up.\r\n\r\nIf you prefer to work in degrees, see the `angle` property instead.",
              "name": "rotation",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "x": {
              "defaultValue": null,
              "description": "The x position of this Game Object.",
              "name": "x",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "y": {
              "defaultValue": null,
              "description": "The y position of this Game Object.",
              "name": "y",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "z": {
              "defaultValue": null,
              "description": "The z position of this Game Object.\nNote: Do not use this value to set the z-index, instead see the `depth` property.",
              "name": "z",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "w": {
              "defaultValue": null,
              "description": "The w position of this Game Object.",
              "name": "w",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scale": {
              "defaultValue": null,
              "description": "",
              "name": "scale",
              "required": false,
              "type": {
                "name": "number | (Point & { point?: Point | undefined; }) | undefined"
              }
            },
            "active": {
              "defaultValue": null,
              "description": "",
              "name": "active",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "name": {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "alpha": {
              "defaultValue": null,
              "description": "",
              "name": "alpha",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tint": {
              "defaultValue": null,
              "description": "",
              "name": "tint",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "tintFill": {
              "defaultValue": null,
              "description": "",
              "name": "tintFill",
              "required": false,
              "type": {
                "name": "number | CornerValues | undefined"
              }
            },
            "blendMode": {
              "defaultValue": null,
              "description": "Sets the Blend Mode being used by this Game Object.\n\r\nThis can be a const, such as `Phaser.BlendModes.SCREEN`, or an integer, such as 4 (for Overlay)\r\n\r\nUnder WebGL only the following Blend Modes are available:\r\n\r\n* ADD\r\n* MULTIPLY\r\n* SCREEN\r\n* ERASE\r\n\r\nCanvas has more available depending on browser support.\r\n\r\nYou can also create your own custom Blend Modes in WebGL.\r\n\r\nBlend modes have different effects under Canvas and WebGL, and from browser to browser, depending\r\non support. Blend Modes also cause a WebGL batch flush should it encounter a new blend mode. For these\r\nreasons try to be careful about the construction of your Scene and the frequency of which blend modes\r\nare used.",
              "name": "blendMode",
              "required": false,
              "type": {
                "name": "string | BlendModes | undefined"
              }
            },
            "flipX": {
              "defaultValue": null,
              "description": "The horizontally flipped state of the Game Object.\n\r\nA Game Object that is flipped horizontally will render inversed on the horizontal axis.\r\nFlipping always takes place from the middle of the texture and does not impact the scale value.\r\nIf this Game Object has a physics body, it will not change the body. This is a rendering toggle only.",
              "name": "flipX",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "flipY": {
              "defaultValue": null,
              "description": "The vertically flipped state of the Game Object.\n\r\nA Game Object that is flipped vertically will render inversed on the vertical axis (i.e. upside down)\r\nFlipping always takes place from the middle of the texture and does not impact the scale value.\r\nIf this Game Object has a physics body, it will not change the body. This is a rendering toggle only.",
              "name": "flipY",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "mask": {
              "defaultValue": null,
              "description": "The Mask this Game Object is using during render.",
              "name": "mask",
              "required": false,
              "type": {
                "name": "BitmapMask | GeometryMask | undefined"
              }
            },
            "displayHeight": {
              "defaultValue": null,
              "description": "The displayed height of this Game Object.\n\r\nThis value takes into account the scale factor.\r\n\r\nSetting this value will adjust the Game Object's scale property.",
              "name": "displayHeight",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "displayWidth": {
              "defaultValue": null,
              "description": "The displayed width of this Game Object.\n\r\nThis value takes into account the scale factor.\r\n\r\nSetting this value will adjust the Game Object's scale property.",
              "name": "displayWidth",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "height": {
              "defaultValue": null,
              "description": "The native (un-scaled) height of this Game Object.\n\r\nChanging this value will not change the size that the Game Object is rendered in-game.\r\nFor that you need to either set the scale of the Game Object (`setScale`) or use\r\nthe `displayHeight` property.",
              "name": "height",
              "required": true,
              "type": {
                "name": "number"
              }
            },
            "width": {
              "defaultValue": null,
              "description": "The native (un-scaled) width of this Game Object.\n\r\nChanging this value will not change the size that the Game Object is rendered in-game.\r\nFor that you need to either set the scale of the Game Object (`setScale`) or use\r\nthe `displayWidth` property.",
              "name": "width",
              "required": true,
              "type": {
                "name": "number"
              }
            },
            "scrollFactorX": {
              "defaultValue": null,
              "description": "The horizontal scroll factor of this Game Object.\n\r\nThe scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n\r\nWhen a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\nIt does not change the Game Objects actual position values.\r\n\r\nA value of 1 means it will move exactly in sync with a camera.\r\nA value of 0 means it will not move at all, even if the camera moves.\r\nOther values control the degree to which the camera movement is mapped to this Game Object.\r\n\r\nPlease be aware that scroll factor values other than 1 are not taken in to consideration when\r\ncalculating physics collisions. Bodies always collide based on their world position, but changing\r\nthe scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\nthem from physics bodies if not accounted for in your code.",
              "name": "scrollFactorX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "scrollFactorY": {
              "defaultValue": null,
              "description": "The vertical scroll factor of this Game Object.\n\r\nThe scroll factor controls the influence of the movement of a Camera upon this Game Object.\r\n\r\nWhen a camera scrolls it will change the location at which this Game Object is rendered on-screen.\r\nIt does not change the Game Objects actual position values.\r\n\r\nA value of 1 means it will move exactly in sync with a camera.\r\nA value of 0 means it will not move at all, even if the camera moves.\r\nOther values control the degree to which the camera movement is mapped to this Game Object.\r\n\r\nPlease be aware that scroll factor values other than 1 are not taken in to consideration when\r\ncalculating physics collisions. Bodies always collide based on their world position, but changing\r\nthe scroll factor is a visual adjustment to where the textures are rendered, which can offset\r\nthem from physics bodies if not accounted for in your code.",
              "name": "scrollFactorY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "visible": {
              "defaultValue": null,
              "description": "The visible state of the Game Object.\n\r\nAn invisible Game Object will skip rendering, but will still process update logic.",
              "name": "visible",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "tabIndex": {
              "defaultValue": null,
              "description": "",
              "name": "tabIndex",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "data": {
              "defaultValue": null,
              "description": "",
              "name": "data",
              "required": false,
              "type": {
                "name": "any"
              }
            },
            "renderFlags": {
              "defaultValue": null,
              "description": "",
              "name": "renderFlags",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "cameraFilter": {
              "defaultValue": null,
              "description": "",
              "name": "cameraFilter",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "ignoreDestroy": {
              "defaultValue": null,
              "description": "",
              "name": "ignoreDestroy",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "interactive": {
              "defaultValue": null,
              "description": "",
              "name": "interactive",
              "required": false,
              "type": {
                "name": "{ shape: any; callback?: HitAreaCallback | undefined; dropZone?: boolean | undefined; } | undefined"
              }
            },
            "crop": {
              "defaultValue": null,
              "description": "",
              "name": "crop",
              "required": false,
              "type": {
                "name": "{ x?: number | undefined; y?: number | undefined; width?: number | undefined; height?: number | undefined; } | undefined"
              }
            },
            "isCropped": {
              "defaultValue": null,
              "description": "",
              "name": "isCropped",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "pipeline": {
              "defaultValue": null,
              "description": "",
              "name": "pipeline",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "setSizeToFrame": {
              "defaultValue": null,
              "description": "",
              "name": "setSizeToFrame",
              "required": false,
              "type": {
                "name": "Frame | undefined"
              }
            },
            "texture": {
              "defaultValue": null,
              "description": "",
              "name": "texture",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "frame": {
              "defaultValue": null,
              "description": "",
              "name": "frame",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "tilePositionX": {
              "defaultValue": null,
              "description": "",
              "name": "tilePositionX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "tilePositionY": {
              "defaultValue": null,
              "description": "",
              "name": "tilePositionY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "tileScaleX": {
              "defaultValue": null,
              "description": "",
              "name": "tileScaleX",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "tileScaleY": {
              "defaultValue": null,
              "description": "",
              "name": "tileScaleY",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "ref": {
              "defaultValue": null,
              "description": "",
              "name": "ref",
              "required": false,
              "type": {
                "name": "((instance: TileSprite | null) => void) | RefObject<TileSprite> | null | undefined"
              }
            },
            "key": {
              "defaultValue": null,
              "description": "",
              "name": "key",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "../packages/react-phaser-fiber/src/components/Canvas/Canvas.tsx",
      "value": [
        {
          "description": "",
          "displayName": "Canvas",
          "methods": [],
          "props": {
            "ref": {
              "defaultValue": null,
              "description": "",
              "name": "ref",
              "required": false,
              "type": {
                "name": "((instance: unknown) => void) | RefObject<unknown> | null | undefined"
              }
            },
            "key": {
              "defaultValue": null,
              "description": "",
              "name": "key",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "../packages/react-phaser-fiber/src/components/Game/Game.tsx",
      "value": [
        {
          "description": "",
          "displayName": "ForwardRefExoticComponent",
          "methods": [],
          "props": {
            "width": {
              "defaultValue": null,
              "description": "The width of the game, in game pixels.",
              "name": "width",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            },
            "height": {
              "defaultValue": null,
              "description": "The height of the game, in game pixels.",
              "name": "height",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            },
            "zoom": {
              "defaultValue": null,
              "description": "Simple scale applied to the game canvas. 2 is double size, 0.5 is half size, etc.",
              "name": "zoom",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "resolution": {
              "defaultValue": null,
              "description": "The size of each game pixel, in canvas pixels. Values larger than 1 are \"high\" resolution.",
              "name": "resolution",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "type": {
              "defaultValue": null,
              "description": "Which renderer to use. Phaser.AUTO, Phaser.CANVAS, Phaser.HEADLESS, or Phaser.WEBGL. AUTO picks WEBGL if available, otherwise CANVAS.",
              "name": "type",
              "required": false,
              "type": {
                "name": "number | undefined"
              }
            },
            "parent": {
              "defaultValue": null,
              "description": "The DOM element that will contain the game canvas, or its `id`. If undefined or if the named element doesn't exist, the game canvas is inserted directly into the document body. If `null` no parent will be used and you are responsible for adding the canvas to your environment.",
              "name": "parent",
              "required": false,
              "type": {
                "name": "string | HTMLElement | undefined"
              }
            },
            "canvasStyle": {
              "defaultValue": null,
              "description": "CSS styles to apply to the game canvas instead of Phasers default styles.",
              "name": "canvasStyle",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "customEnvironment": {
              "defaultValue": null,
              "description": "Is Phaser running under a custom (non-native web) environment? If so, set this to `true` to skip internal Feature detection. If `true` the `renderType` cannot be left as `AUTO`.",
              "name": "customEnvironment",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "context": {
              "defaultValue": null,
              "description": "Provide your own Canvas Context for Phaser to use, instead of creating one.",
              "name": "context",
              "required": false,
              "type": {
                "name": "CanvasRenderingContext2D | undefined"
              }
            },
            "seed": {
              "defaultValue": null,
              "description": "Seed for the random number generator.",
              "name": "seed",
              "required": false,
              "type": {
                "name": "string[] | undefined"
              }
            },
            "title": {
              "defaultValue": null,
              "description": "The title of the game. Shown in the browser console.",
              "name": "title",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "url": {
              "defaultValue": null,
              "description": "The URL of the game. Shown in the browser console.",
              "name": "url",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "version": {
              "defaultValue": null,
              "description": "The version of the game. Shown in the browser console.",
              "name": "version",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "autoFocus": {
              "defaultValue": null,
              "description": "Automatically call window.focus() when the game boots. Usually necessary to capture input events if the game is in a separate frame.",
              "name": "autoFocus",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "input": {
              "defaultValue": null,
              "description": "Input configuration, or `false` to disable all game input.",
              "name": "input",
              "required": false,
              "type": {
                "name": "boolean | InputConfig | undefined"
              }
            },
            "disableContextMenu": {
              "defaultValue": null,
              "description": "Disable the browser's default 'contextmenu' event (usually triggered by a right-button mouse click).",
              "name": "disableContextMenu",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "transparent": {
              "defaultValue": null,
              "description": "Whether the game canvas will have a transparent background.",
              "name": "transparent",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "banner": {
              "defaultValue": null,
              "description": "Configuration for the banner printed in the browser console when the game starts.",
              "name": "banner",
              "required": false,
              "type": {
                "name": "boolean | BannerConfig | undefined"
              }
            },
            "dom": {
              "defaultValue": null,
              "description": "The DOM Container configuration object.",
              "name": "dom",
              "required": false,
              "type": {
                "name": "DOMContainerConfig | undefined"
              }
            },
            "fps": {
              "defaultValue": null,
              "description": "Game loop configuration.",
              "name": "fps",
              "required": false,
              "type": {
                "name": "FPSConfig | undefined"
              }
            },
            "render": {
              "defaultValue": null,
              "description": "Game renderer configuration.",
              "name": "render",
              "required": false,
              "type": {
                "name": "RenderConfig | undefined"
              }
            },
            "backgroundColor": {
              "defaultValue": null,
              "description": "The background color of the game canvas. The default is black.",
              "name": "backgroundColor",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            },
            "callbacks": {
              "defaultValue": null,
              "description": "Optional callbacks to run before or after game boot.",
              "name": "callbacks",
              "required": false,
              "type": {
                "name": "CallbacksConfig | undefined"
              }
            },
            "loader": {
              "defaultValue": null,
              "description": "Loader configuration.",
              "name": "loader",
              "required": false,
              "type": {
                "name": "LoaderConfig | undefined"
              }
            },
            "images": {
              "defaultValue": null,
              "description": "Images configuration.",
              "name": "images",
              "required": false,
              "type": {
                "name": "ImagesConfig | undefined"
              }
            },
            "physics": {
              "defaultValue": null,
              "description": "Physics configuration.",
              "name": "physics",
              "required": false,
              "type": {
                "name": "PhysicsConfig | undefined"
              }
            },
            "plugins": {
              "defaultValue": null,
              "description": "Plugins to install.",
              "name": "plugins",
              "required": false,
              "type": {
                "name": "PluginObject | PluginObjectItem[] | undefined"
              }
            },
            "scale": {
              "defaultValue": null,
              "description": "The Scale Manager configuration.",
              "name": "scale",
              "required": false,
              "type": {
                "name": "ScaleConfig | undefined"
              }
            },
            "audio": {
              "defaultValue": null,
              "description": "The Audio Configuration object.",
              "name": "audio",
              "required": false,
              "type": {
                "name": "AudioConfig | undefined"
              }
            },
            "ref": {
              "defaultValue": null,
              "description": "",
              "name": "ref",
              "required": false,
              "type": {
                "name": "((instance: Game | null) => void) | RefObject<Game> | null | undefined"
              }
            },
            "key": {
              "defaultValue": null,
              "description": "",
              "name": "key",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "../packages/react-phaser-fiber/src/components/Game/GameContext.ts",
      "value": []
    },
    {
      "key": "../packages/react-phaser-fiber/src/components/Scene/Scene.tsx",
      "value": [
        {
          "description": "",
          "displayName": "Scene",
          "methods": [],
          "props": {
            "sceneKey": {
              "defaultValue": null,
              "description": "",
              "name": "sceneKey",
              "required": true,
              "type": {
                "name": "string"
              }
            },
            "onPreload": {
              "defaultValue": null,
              "description": "",
              "name": "onPreload",
              "required": false,
              "type": {
                "name": "((scene: Scene) => any) | undefined"
              }
            },
            "onCreate": {
              "defaultValue": null,
              "description": "",
              "name": "onCreate",
              "required": false,
              "type": {
                "name": "((scene: Scene) => any) | undefined"
              }
            },
            "onInit": {
              "defaultValue": null,
              "description": "",
              "name": "onInit",
              "required": false,
              "type": {
                "name": "((scene: Scene) => any) | undefined"
              }
            },
            "renderLoading": {
              "defaultValue": null,
              "description": "",
              "name": "renderLoading",
              "required": false,
              "type": {
                "name": "((progress: number) => ReactNode) | undefined"
              }
            },
            "key": {
              "defaultValue": null,
              "description": "The unique key of this Scene. Must be unique within the entire Game instance.",
              "name": "key",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "active": {
              "defaultValue": null,
              "description": "Does the Scene start as active or not? An active Scene updates each step.",
              "name": "active",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "visible": {
              "defaultValue": null,
              "description": "Does the Scene start as visible or not? A visible Scene renders each step.",
              "name": "visible",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "pack": {
              "defaultValue": null,
              "description": "An optional Loader Packfile to be loaded before the Scene begins.",
              "name": "pack",
              "required": false,
              "type": {
                "name": "false | PackFileConfig | undefined"
              }
            },
            "cameras": {
              "defaultValue": null,
              "description": "An optional Camera configuration object.",
              "name": "cameras",
              "required": false,
              "type": {
                "name": "JSONCamera | JSONCamera[] | undefined"
              }
            },
            "map": {
              "defaultValue": null,
              "description": "Overwrites the default injection map for a scene.",
              "name": "map",
              "required": false,
              "type": {
                "name": "{ [key: string]: string; } | undefined"
              }
            },
            "mapAdd": {
              "defaultValue": null,
              "description": "Extends the injection map for a scene.",
              "name": "mapAdd",
              "required": false,
              "type": {
                "name": "{ [key: string]: string; } | undefined"
              }
            },
            "physics": {
              "defaultValue": null,
              "description": "The physics configuration object for the Scene.",
              "name": "physics",
              "required": false,
              "type": {
                "name": "PhysicsConfig | undefined"
              }
            },
            "loader": {
              "defaultValue": null,
              "description": "The loader configuration object for the Scene.",
              "name": "loader",
              "required": false,
              "type": {
                "name": "LoaderConfig | undefined"
              }
            },
            "plugins": {
              "defaultValue": null,
              "description": "The plugin configuration object for the Scene.",
              "name": "plugins",
              "required": false,
              "type": {
                "name": "any"
              }
            },
            "ref": {
              "defaultValue": null,
              "description": "",
              "name": "ref",
              "required": false,
              "type": {
                "name": "((instance: Scene | null) => void) | RefObject<Scene> | null | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "../packages/react-phaser-fiber/src/components/Scene/SceneContext.tsx",
      "value": []
    },
    {
      "key": "../packages/react-phaser-fiber/src/components/Spawner/Spawner.tsx",
      "value": [
        {
          "description": "",
          "displayName": "Spawner",
          "methods": [],
          "props": {}
        }
      ]
    },
    {
      "key": "../packages/react-phaser-fiber/src/components/Spawner/SpawnerContext.ts",
      "value": []
    },
    {
      "key": "../packages/react-phaser-fiber/src/reconciler/elements/ArcadeGroup.ts",
      "value": []
    },
    {
      "key": "../packages/react-phaser-fiber/src/reconciler/elements/ArcadeImage.ts",
      "value": []
    },
    {
      "key": "../packages/react-phaser-fiber/src/reconciler/elements/ArcadeSprite.ts",
      "value": []
    },
    {
      "key": "../packages/react-phaser-fiber/src/reconciler/elements/Group.ts",
      "value": []
    },
    {
      "key": "../packages/react-phaser-fiber/src/reconciler/elements/Image.ts",
      "value": []
    },
    {
      "key": "../packages/react-phaser-fiber/src/reconciler/elements/MatterImage.ts",
      "value": []
    },
    {
      "key": "../packages/react-phaser-fiber/src/reconciler/elements/MatterSprite.ts",
      "value": []
    },
    {
      "key": "../packages/react-phaser-fiber/src/reconciler/elements/Sprite.ts",
      "value": []
    },
    {
      "key": "../packages/react-phaser-fiber/src/reconciler/elements/Text.ts",
      "value": []
    },
    {
      "key": "../packages/react-phaser-fiber/src/reconciler/elements/TileSprite.ts",
      "value": []
    }
  ]
}
